/**
 * router-core
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var history = require('history');
var invariant = require('tiny-invariant');
var path = require('./path.js');
var qss = require('./qss.js');
var route = require('./route.js');
var routeConfig = require('./routeConfig.js');
var routeMatch = require('./routeMatch.js');
var router = require('./router.js');
var searchParams = require('./searchParams.js');
var utils = require('./utils.js');
var sharedClone = require('./sharedClone.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var invariant__default = /*#__PURE__*/_interopDefaultLegacy(invariant);



Object.defineProperty(exports, 'createBrowserHistory', {
  enumerable: true,
  get: function () { return history.createBrowserHistory; }
});
Object.defineProperty(exports, 'createHashHistory', {
  enumerable: true,
  get: function () { return history.createHashHistory; }
});
Object.defineProperty(exports, 'createMemoryHistory', {
  enumerable: true,
  get: function () { return history.createMemoryHistory; }
});
Object.defineProperty(exports, 'invariant', {
  enumerable: true,
  get: function () { return invariant__default["default"]; }
});
exports.cleanPath = path.cleanPath;
exports.interpolatePath = path.interpolatePath;
exports.joinPaths = path.joinPaths;
exports.matchByPath = path.matchByPath;
exports.matchPathname = path.matchPathname;
exports.parsePathname = path.parsePathname;
exports.resolvePath = path.resolvePath;
exports.trimPath = path.trimPath;
exports.trimPathLeft = path.trimPathLeft;
exports.trimPathRight = path.trimPathRight;
exports.decode = qss.decode;
exports.encode = qss.encode;
exports.createRoute = route.createRoute;
exports.createRouteConfig = routeConfig.createRouteConfig;
exports.rootRouteId = routeConfig.rootRouteId;
exports.createRouteMatch = routeMatch.createRouteMatch;
exports.createRouter = router.createRouter;
exports.defaultParseSearch = searchParams.defaultParseSearch;
exports.defaultStringifySearch = searchParams.defaultStringifySearch;
exports.parseSearchWith = searchParams.parseSearchWith;
exports.stringifySearchWith = searchParams.stringifySearchWith;
exports.functionalUpdate = utils.functionalUpdate;
exports.last = utils.last;
exports.pick = utils.pick;
exports.warning = utils.warning;
exports.sharedClone = sharedClone.sharedClone;
//# sourceMappingURL=index.js.map
