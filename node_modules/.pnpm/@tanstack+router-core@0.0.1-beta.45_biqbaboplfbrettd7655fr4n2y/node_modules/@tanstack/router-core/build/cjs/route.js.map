{"version":3,"file":"route.js","sources":["../../src/route.ts"],"sourcesContent":["import {\n  CheckRelativePath,\n  LinkInfo,\n  LinkOptions,\n  ResolveRelativePath,\n  ToOptions,\n} from './link'\nimport { LoaderContext, RouteConfig, RouteOptions } from './routeConfig'\nimport {\n  AnyAllRouteInfo,\n  AnyRouteInfo,\n  DefaultAllRouteInfo,\n  RouteInfo,\n  RouteInfoByPath,\n} from './routeInfo'\nimport {\n  Action,\n  ActionState,\n  Loader,\n  LoaderState,\n  MatchRouteOptions,\n  Router,\n} from './router'\nimport { NoInfer } from './utils'\nimport { createStore } from '@solidjs/reactivity'\n\nexport interface AnyRoute extends Route<any, any, any> {}\n\nexport interface Route<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n  TRouterContext = unknown,\n> {\n  routeInfo: TRouteInfo\n  routeId: TRouteInfo['id']\n  routeRouteId: TRouteInfo['routeId']\n  routePath: TRouteInfo['path']\n  fullPath: TRouteInfo['fullPath']\n  parentRoute?: AnyRoute\n  childRoutes?: AnyRoute[]\n  options: RouteOptions\n  originalIndex: number\n  router: Router<TAllRouteInfo['routeConfig'], TAllRouteInfo, TRouterContext>\n  action: unknown extends TRouteInfo['actionResponse']\n    ?\n        | Action<TRouteInfo['actionPayload'], TRouteInfo['actionResponse']>\n        | undefined\n    : Action<TRouteInfo['actionPayload'], TRouteInfo['actionResponse']>\n  loader: unknown extends TRouteInfo['routeLoaderData']\n    ?\n        | Action<\n            LoaderContext<\n              TRouteInfo['fullSearchSchema'],\n              TRouteInfo['allParams']\n            >,\n            TRouteInfo['routeLoaderData']\n          >\n        | undefined\n    : Loader<\n        TRouteInfo['fullSearchSchema'],\n        TRouteInfo['allParams'],\n        TRouteInfo['routeLoaderData']\n      >\n  // buildLink: <TTo extends string = '.'>(\n  //   options: Omit<\n  //     LinkOptions<TAllRouteInfo, TRouteInfo['fullPath'], TTo>,\n  //     'from'\n  //   >,\n  // ) => LinkInfo\n  // matchRoute: <\n  //   TTo extends string = '.',\n  //   TResolved extends string = ResolveRelativePath<TRouteInfo['id'], TTo>,\n  // >(\n  //   matchLocation: CheckRelativePath<\n  //     TAllRouteInfo,\n  //     TRouteInfo['fullPath'],\n  //     NoInfer<TTo>\n  //   > &\n  //     Omit<ToOptions<TAllRouteInfo, TRouteInfo['fullPath'], TTo>, 'from'>,\n  //   opts?: MatchRouteOptions,\n  // ) => RouteInfoByPath<TAllRouteInfo, TResolved>['allParams']\n  // navigate: <TTo extends string = '.'>(\n  //   options: Omit<\n  //     LinkOptions<TAllRouteInfo, TRouteInfo['fullPath'], TTo>,\n  //     'from'\n  //   >,\n  // ) => Promise<void>\n}\n\nexport function createRoute<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n  TRouterContext = unknown,\n>(\n  routeConfig: RouteConfig,\n  options: TRouteInfo['options'],\n  originalIndex: number,\n  parent: undefined | Route<TAllRouteInfo, any>,\n  router: Router<TAllRouteInfo['routeConfig'], TAllRouteInfo, TRouterContext>,\n): Route<TAllRouteInfo, TRouteInfo, TRouterContext> {\n  const { id, routeId, path: routePath, fullPath } = routeConfig\n\n  let route: Route<TAllRouteInfo, TRouteInfo, TRouterContext> = {\n    routeInfo: undefined!,\n    routeId: id,\n    routeRouteId: routeId,\n    originalIndex,\n    routePath,\n    fullPath,\n    options,\n    router,\n    childRoutes: undefined!,\n    parentRoute: parent,\n    get action() {\n      let action =\n        router.store.actions[id] ||\n        (() => {\n          router.setStore((s) => {\n            s.actions[id] = {\n              submissions: [],\n              submit: async <T, U>(\n                submission: T,\n                actionOpts?: { invalidate?: boolean; multi?: boolean },\n              ) => {\n                if (!route) {\n                  return\n                }\n\n                const invalidate = actionOpts?.invalidate ?? true\n\n                const [actionStore, setActionStore] = createStore<\n                  ActionState<T, U>\n                >({\n                  submittedAt: Date.now(),\n                  status: 'pending',\n                  submission,\n                  isMulti: !!actionOpts?.multi,\n                })\n\n                router.setStore((s) => {\n                  if (!actionOpts?.multi) {\n                    s.actions[id]!.submissions = action.submissions.filter(\n                      (d) => d.isMulti,\n                    )\n                  }\n\n                  s.actions[id]!.current = actionStore\n                  s.actions[id]!.latest = actionStore\n                  s.actions[id]!.submissions.push(actionStore)\n                })\n\n                try {\n                  const res = await route.options.action?.(submission)\n\n                  setActionStore((s) => {\n                    s.data = res as U\n                  })\n\n                  if (invalidate) {\n                    router.invalidateRoute({ to: '.', fromCurrent: true })\n                    await router.reload()\n                  }\n\n                  setActionStore((s) => {\n                    s.status = 'success'\n                  })\n\n                  return res\n                } catch (err) {\n                  console.error(err)\n                  setActionStore((s) => {\n                    s.error = err\n                    s.status = 'error'\n                  })\n                }\n              },\n            }\n          })\n\n          return router.store.actions[id]!\n        })()\n\n      return action\n    },\n    get loader() {\n      let loader =\n        router.store.loaders[id] ||\n        (() => {\n          router.setStore((s) => {\n            s.loaders[id] = {\n              pending: [],\n              fetch: (async (loaderContext: LoaderContext<any, any>) => {\n                if (!route) {\n                  return\n                }\n\n                const loaderState: LoaderState<any, any> = {\n                  loadedAt: Date.now(),\n                  loaderContext,\n                }\n\n                router.setStore((s) => {\n                  s.loaders[id]!.current = loaderState\n                  s.loaders[id]!.latest = loaderState\n                  s.loaders[id]!.pending.push(loaderState)\n                })\n\n                try {\n                  return await route.options.loader?.(loaderContext)\n                } finally {\n                  router.setStore((s) => {\n                    s.loaders[id]!.pending = s.loaders[id]!.pending.filter(\n                      (d) => d !== loaderState,\n                    )\n                  })\n                }\n              }) as any,\n            }\n          })\n\n          return router.store.loaders[id]!\n        })()\n\n      return loader as any\n    },\n\n    // buildLink: (options) => {\n    //   return router.buildLink({\n    //     ...options,\n    //     from: fullPath,\n    //   } as any) as any\n    // },\n\n    // navigate: (options) => {\n    //   return router.navigate({\n    //     ...options,\n    //     from: fullPath,\n    //   } as any) as any\n    // },\n\n    // matchRoute: (matchLocation, opts) => {\n    //   return router.matchRoute(\n    //     {\n    //       ...matchLocation,\n    //       from: fullPath,\n    //     } as any,\n    //     opts,\n    //   ) as any\n    // },\n  }\n\n  router.options.createRoute?.({ router, route })\n\n  return route\n}\n"],"names":["createRoute","routeConfig","options","originalIndex","parent","router","id","routeId","path","routePath","fullPath","route","routeInfo","undefined","routeRouteId","childRoutes","parentRoute","action","store","actions","setStore","s","submissions","submit","submission","actionOpts","invalidate","actionStore","setActionStore","createStore","submittedAt","Date","now","status","isMulti","multi","filter","d","current","latest","push","res","data","invalidateRoute","to","fromCurrent","reload","err","console","error","loader","loaders","pending","fetch","loaderContext","loaderState","loadedAt"],"mappings":"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"}