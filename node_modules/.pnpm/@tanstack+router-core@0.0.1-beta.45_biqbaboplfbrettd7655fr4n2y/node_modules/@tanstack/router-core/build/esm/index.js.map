{"version":3,"file":"index.js","sources":["../../src/utils.ts","../../src/path.ts","../../src/qss.ts","../../src/route.ts","../../src/routeConfig.ts","../../src/sharedClone.ts","../../src/routeMatch.ts","../../src/searchParams.ts","../../src/router.ts"],"sourcesContent":["export type NoInfer<T> = [T][T extends any ? 0 : never]\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsAnyBoolean<T> = 1 extends 0 & T ? true : false\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\nexport type PickAsRequired<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type PickAsPartial<T, K extends keyof T> = Omit<T, K> &\n  Partial<Pick<T, K>>\nexport type PickUnsafe<T, K> = K extends keyof T ? Pick<T, K> : never\nexport type PickExtra<T, K> = Expand<{\n  [TKey in keyof K as string extends TKey\n    ? never\n    : TKey extends keyof T\n    ? never\n    : TKey]: K[TKey]\n}>\nexport type PickRequired<T> = {\n  [K in keyof T as undefined extends T[K] ? never : K]: T[K]\n}\n\nexport type Expand<T> = T extends object\n  ? T extends infer O\n    ? { [K in keyof O]: O[K] }\n    : never\n  : T\n\nexport type UnionToIntersection<U> = (\n  U extends any ? (k: U) => void : never\n) extends (k: infer I) => any\n  ? I\n  : never\n\nexport type Values<O> = O[ValueKeys<O>]\nexport type ValueKeys<O> = Extract<keyof O, PropertyKey>\n\nexport type DeepAwaited<T> = T extends Promise<infer A>\n  ? DeepAwaited<A>\n  : T extends Record<infer A, Promise<infer B>>\n  ? { [K in A]: DeepAwaited<B> }\n  : T\n\nexport type PathParamMask<TRoutePath extends string> =\n  TRoutePath extends `${infer L}/$${infer C}/${infer R}`\n    ? PathParamMask<`${L}/${string}/${R}`>\n    : TRoutePath extends `${infer L}/$${infer C}`\n    ? PathParamMask<`${L}/${string}`>\n    : TRoutePath\n\nexport type Timeout = ReturnType<typeof setTimeout>\n\nexport type Updater<TPrevious, TResult = TPrevious> =\n  | TResult\n  | ((prev?: TPrevious) => TResult)\n\nexport type PickExtract<T, U> = {\n  [K in keyof T as T[K] extends U ? K : never]: T[K]\n}\n\nexport type PickExclude<T, U> = {\n  [K in keyof T as T[K] extends U ? never : K]: T[K]\n}\n\nexport function last<T>(arr: T[]) {\n  return arr[arr.length - 1]\n}\n\nexport function warning(cond: any, message: string): cond is true {\n  if (cond) {\n    if (typeof console !== 'undefined') console.warn(message)\n\n    try {\n      throw new Error(message)\n    } catch {}\n  }\n\n  return true\n}\n\nfunction isFunction(d: any): d is Function {\n  return typeof d === 'function'\n}\n\nexport function functionalUpdate<TResult>(\n  updater: Updater<TResult>,\n  previous: TResult,\n) {\n  if (isFunction(updater)) {\n    return updater(previous as TResult)\n  }\n\n  return updater\n}\n\nexport function pick<T, K extends keyof T>(parent: T, keys: K[]): Pick<T, K> {\n  return keys.reduce((obj: any, key: K) => {\n    obj[key] = parent[key]\n    return obj\n  }, {} as any)\n}\n","import invariant from 'tiny-invariant'\nimport { AnyPathParams } from './routeConfig'\nimport { MatchLocation } from './router'\nimport { last } from './utils'\n\nexport interface Segment {\n  type: 'pathname' | 'param' | 'wildcard'\n  value: string\n}\n\nexport function joinPaths(paths: (string | undefined)[]) {\n  return cleanPath(paths.filter(Boolean).join('/'))\n}\n\nexport function cleanPath(path: string) {\n  // remove double slashes\n  return path.replace(/\\/{2,}/g, '/')\n}\n\nexport function trimPathLeft(path: string) {\n  return path === '/' ? path : path.replace(/^\\/{1,}/, '')\n}\n\nexport function trimPathRight(path: string) {\n  return path === '/' ? path : path.replace(/\\/{1,}$/, '')\n}\n\nexport function trimPath(path: string) {\n  return trimPathRight(trimPathLeft(path))\n}\n\nexport function resolvePath(basepath: string, base: string, to: string) {\n  base = base.replace(new RegExp(`^${basepath}`), '/')\n  to = to.replace(new RegExp(`^${basepath}`), '/')\n\n  let baseSegments = parsePathname(base)\n  const toSegments = parsePathname(to)\n\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === '/') {\n      if (!index) {\n        // Leading slash\n        baseSegments = [toSegment]\n      } else if (index === toSegments.length - 1) {\n        // Trailing Slash\n        baseSegments.push(toSegment)\n      } else {\n        // ignore inter-slashes\n      }\n    } else if (toSegment.value === '..') {\n      // Extra trailing slash? pop it off\n      if (baseSegments.length > 1 && last(baseSegments)?.value === '/') {\n        baseSegments.pop()\n      }\n      baseSegments.pop()\n    } else if (toSegment.value === '.') {\n      return\n    } else {\n      baseSegments.push(toSegment)\n    }\n  })\n\n  const joined = joinPaths([basepath, ...baseSegments.map((d) => d.value)])\n\n  return cleanPath(joined)\n}\n\nexport function parsePathname(pathname?: string): Segment[] {\n  if (!pathname) {\n    return []\n  }\n\n  pathname = cleanPath(pathname)\n\n  const segments: Segment[] = []\n\n  if (pathname.slice(0, 1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  if (!pathname) {\n    return segments\n  }\n\n  // Remove empty segments and '.' segments\n  const split = pathname.split('/').filter(Boolean)\n\n  segments.push(\n    ...split.map((part): Segment => {\n      if (part.startsWith('*')) {\n        return {\n          type: 'wildcard',\n          value: part,\n        }\n      }\n\n      if (part.charAt(0) === '$') {\n        return {\n          type: 'param',\n          value: part,\n        }\n      }\n\n      return {\n        type: 'pathname',\n        value: part,\n      }\n    }),\n  )\n\n  if (pathname.slice(-1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  return segments\n}\n\nexport function interpolatePath(\n  path: string | undefined,\n  params: any,\n  leaveWildcard?: boolean,\n) {\n  const interpolatedPathSegments = parsePathname(path)\n\n  return joinPaths(\n    interpolatedPathSegments.map((segment) => {\n      if (segment.value === '*' && !leaveWildcard) {\n        return ''\n      }\n\n      if (segment.type === 'param') {\n        return params![segment.value.substring(1)] ?? ''\n      }\n\n      return segment.value\n    }),\n  )\n}\n\nexport function matchPathname(\n  basepath: string,\n  currentPathname: string,\n  matchLocation: Pick<MatchLocation, 'to' | 'fuzzy' | 'caseSensitive'>,\n): AnyPathParams | undefined {\n  const pathParams = matchByPath(basepath, currentPathname, matchLocation)\n  // const searchMatched = matchBySearch(currentLocation.search, matchLocation)\n\n  if (matchLocation.to && !pathParams) {\n    return\n  }\n\n  return pathParams ?? {}\n}\n\nexport function matchByPath(\n  basepath: string,\n  from: string,\n  matchLocation: Pick<MatchLocation, 'to' | 'caseSensitive' | 'fuzzy'>,\n): Record<string, string> | undefined {\n  if (!from.startsWith(basepath)) {\n    return undefined\n  }\n  from = basepath != '/' ? from.substring(basepath.length) : from\n  const baseSegments = parsePathname(from)\n  const to = `${matchLocation.to ?? '*'}`\n  const routeSegments = parsePathname(to)\n\n  const params: Record<string, string> = {}\n\n  let isMatch = (() => {\n    for (\n      let i = 0;\n      i < Math.max(baseSegments.length, routeSegments.length);\n      i++\n    ) {\n      const baseSegment = baseSegments[i]\n      const routeSegment = routeSegments[i]\n\n      const isLastRouteSegment = i === routeSegments.length - 1\n      const isLastBaseSegment = i === baseSegments.length - 1\n\n      if (routeSegment) {\n        if (routeSegment.type === 'wildcard') {\n          if (baseSegment?.value) {\n            params['*'] = joinPaths(baseSegments.slice(i).map((d) => d.value))\n            return true\n          }\n          return false\n        }\n\n        if (routeSegment.type === 'pathname') {\n          if (routeSegment.value === '/' && !baseSegment?.value) {\n            return true\n          }\n\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false\n              }\n            } else if (\n              routeSegment.value.toLowerCase() !==\n              baseSegment.value.toLowerCase()\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (!baseSegment) {\n          return false\n        }\n\n        if (routeSegment.type === 'param') {\n          if (baseSegment?.value === '/') {\n            return false\n          }\n          if (baseSegment.value.charAt(0) !== '$') {\n            params[routeSegment.value.substring(1)] = baseSegment.value\n          }\n        }\n      }\n\n      if (isLastRouteSegment && !isLastBaseSegment) {\n        return !!matchLocation.fuzzy\n      }\n    }\n    return true\n  })()\n\n  return isMatch ? (params as Record<string, string>) : undefined\n}\n","// @ts-nocheck\n\n// qss has been slightly modified and inlined here for our use cases (and compression's sake). We've included it as a hard dependency for MIT license attribution.\n\nexport function encode(obj, pfx?: string) {\n  var k,\n    i,\n    tmp,\n    str = ''\n\n  for (k in obj) {\n    if ((tmp = obj[k]) !== void 0) {\n      if (Array.isArray(tmp)) {\n        for (i = 0; i < tmp.length; i++) {\n          str && (str += '&')\n          str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i])\n        }\n      } else {\n        str && (str += '&')\n        str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp)\n      }\n    }\n  }\n\n  return (pfx || '') + str\n}\n\nfunction toValue(mix) {\n  if (!mix) return ''\n  var str = decodeURIComponent(mix)\n  if (str === 'false') return false\n  if (str === 'true') return true\n  if (str.charAt(0) === '0') return str\n  return +str * 0 === 0 ? +str : str\n}\n\nexport function decode(str) {\n  var tmp,\n    k,\n    out = {},\n    arr = str.split('&')\n\n  while ((tmp = arr.shift())) {\n    tmp = tmp.split('=')\n    k = tmp.shift()\n    if (out[k] !== void 0) {\n      out[k] = [].concat(out[k], toValue(tmp.shift()))\n    } else {\n      out[k] = toValue(tmp.shift())\n    }\n  }\n\n  return out\n}\n","import {\n  CheckRelativePath,\n  LinkInfo,\n  LinkOptions,\n  ResolveRelativePath,\n  ToOptions,\n} from './link'\nimport { LoaderContext, RouteConfig, RouteOptions } from './routeConfig'\nimport {\n  AnyAllRouteInfo,\n  AnyRouteInfo,\n  DefaultAllRouteInfo,\n  RouteInfo,\n  RouteInfoByPath,\n} from './routeInfo'\nimport {\n  Action,\n  ActionState,\n  Loader,\n  LoaderState,\n  MatchRouteOptions,\n  Router,\n} from './router'\nimport { NoInfer } from './utils'\nimport { createStore } from '@solidjs/reactivity'\n\nexport interface AnyRoute extends Route<any, any, any> {}\n\nexport interface Route<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n  TRouterContext = unknown,\n> {\n  routeInfo: TRouteInfo\n  routeId: TRouteInfo['id']\n  routeRouteId: TRouteInfo['routeId']\n  routePath: TRouteInfo['path']\n  fullPath: TRouteInfo['fullPath']\n  parentRoute?: AnyRoute\n  childRoutes?: AnyRoute[]\n  options: RouteOptions\n  originalIndex: number\n  router: Router<TAllRouteInfo['routeConfig'], TAllRouteInfo, TRouterContext>\n  action: unknown extends TRouteInfo['actionResponse']\n    ?\n        | Action<TRouteInfo['actionPayload'], TRouteInfo['actionResponse']>\n        | undefined\n    : Action<TRouteInfo['actionPayload'], TRouteInfo['actionResponse']>\n  loader: unknown extends TRouteInfo['routeLoaderData']\n    ?\n        | Action<\n            LoaderContext<\n              TRouteInfo['fullSearchSchema'],\n              TRouteInfo['allParams']\n            >,\n            TRouteInfo['routeLoaderData']\n          >\n        | undefined\n    : Loader<\n        TRouteInfo['fullSearchSchema'],\n        TRouteInfo['allParams'],\n        TRouteInfo['routeLoaderData']\n      >\n  // buildLink: <TTo extends string = '.'>(\n  //   options: Omit<\n  //     LinkOptions<TAllRouteInfo, TRouteInfo['fullPath'], TTo>,\n  //     'from'\n  //   >,\n  // ) => LinkInfo\n  // matchRoute: <\n  //   TTo extends string = '.',\n  //   TResolved extends string = ResolveRelativePath<TRouteInfo['id'], TTo>,\n  // >(\n  //   matchLocation: CheckRelativePath<\n  //     TAllRouteInfo,\n  //     TRouteInfo['fullPath'],\n  //     NoInfer<TTo>\n  //   > &\n  //     Omit<ToOptions<TAllRouteInfo, TRouteInfo['fullPath'], TTo>, 'from'>,\n  //   opts?: MatchRouteOptions,\n  // ) => RouteInfoByPath<TAllRouteInfo, TResolved>['allParams']\n  // navigate: <TTo extends string = '.'>(\n  //   options: Omit<\n  //     LinkOptions<TAllRouteInfo, TRouteInfo['fullPath'], TTo>,\n  //     'from'\n  //   >,\n  // ) => Promise<void>\n}\n\nexport function createRoute<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n  TRouterContext = unknown,\n>(\n  routeConfig: RouteConfig,\n  options: TRouteInfo['options'],\n  originalIndex: number,\n  parent: undefined | Route<TAllRouteInfo, any>,\n  router: Router<TAllRouteInfo['routeConfig'], TAllRouteInfo, TRouterContext>,\n): Route<TAllRouteInfo, TRouteInfo, TRouterContext> {\n  const { id, routeId, path: routePath, fullPath } = routeConfig\n\n  let route: Route<TAllRouteInfo, TRouteInfo, TRouterContext> = {\n    routeInfo: undefined!,\n    routeId: id,\n    routeRouteId: routeId,\n    originalIndex,\n    routePath,\n    fullPath,\n    options,\n    router,\n    childRoutes: undefined!,\n    parentRoute: parent,\n    get action() {\n      let action =\n        router.store.actions[id] ||\n        (() => {\n          router.setStore((s) => {\n            s.actions[id] = {\n              submissions: [],\n              submit: async <T, U>(\n                submission: T,\n                actionOpts?: { invalidate?: boolean; multi?: boolean },\n              ) => {\n                if (!route) {\n                  return\n                }\n\n                const invalidate = actionOpts?.invalidate ?? true\n\n                const [actionStore, setActionStore] = createStore<\n                  ActionState<T, U>\n                >({\n                  submittedAt: Date.now(),\n                  status: 'pending',\n                  submission,\n                  isMulti: !!actionOpts?.multi,\n                })\n\n                router.setStore((s) => {\n                  if (!actionOpts?.multi) {\n                    s.actions[id]!.submissions = action.submissions.filter(\n                      (d) => d.isMulti,\n                    )\n                  }\n\n                  s.actions[id]!.current = actionStore\n                  s.actions[id]!.latest = actionStore\n                  s.actions[id]!.submissions.push(actionStore)\n                })\n\n                try {\n                  const res = await route.options.action?.(submission)\n\n                  setActionStore((s) => {\n                    s.data = res as U\n                  })\n\n                  if (invalidate) {\n                    router.invalidateRoute({ to: '.', fromCurrent: true })\n                    await router.reload()\n                  }\n\n                  setActionStore((s) => {\n                    s.status = 'success'\n                  })\n\n                  return res\n                } catch (err) {\n                  console.error(err)\n                  setActionStore((s) => {\n                    s.error = err\n                    s.status = 'error'\n                  })\n                }\n              },\n            }\n          })\n\n          return router.store.actions[id]!\n        })()\n\n      return action\n    },\n    get loader() {\n      let loader =\n        router.store.loaders[id] ||\n        (() => {\n          router.setStore((s) => {\n            s.loaders[id] = {\n              pending: [],\n              fetch: (async (loaderContext: LoaderContext<any, any>) => {\n                if (!route) {\n                  return\n                }\n\n                const loaderState: LoaderState<any, any> = {\n                  loadedAt: Date.now(),\n                  loaderContext,\n                }\n\n                router.setStore((s) => {\n                  s.loaders[id]!.current = loaderState\n                  s.loaders[id]!.latest = loaderState\n                  s.loaders[id]!.pending.push(loaderState)\n                })\n\n                try {\n                  return await route.options.loader?.(loaderContext)\n                } finally {\n                  router.setStore((s) => {\n                    s.loaders[id]!.pending = s.loaders[id]!.pending.filter(\n                      (d) => d !== loaderState,\n                    )\n                  })\n                }\n              }) as any,\n            }\n          })\n\n          return router.store.loaders[id]!\n        })()\n\n      return loader as any\n    },\n\n    // buildLink: (options) => {\n    //   return router.buildLink({\n    //     ...options,\n    //     from: fullPath,\n    //   } as any) as any\n    // },\n\n    // navigate: (options) => {\n    //   return router.navigate({\n    //     ...options,\n    //     from: fullPath,\n    //   } as any) as any\n    // },\n\n    // matchRoute: (matchLocation, opts) => {\n    //   return router.matchRoute(\n    //     {\n    //       ...matchLocation,\n    //       from: fullPath,\n    //     } as any,\n    //     opts,\n    //   ) as any\n    // },\n  }\n\n  router.options.createRoute?.({ router, route })\n\n  return route\n}\n","import invariant from 'tiny-invariant'\nimport { GetFrameworkGeneric } from './frameworks'\nimport { ParsePathParams } from './link'\nimport { joinPaths, trimPath, trimPathRight } from './path'\nimport { RouteInfo } from './routeInfo'\nimport { RouteMatch } from './routeMatch'\nimport { RegisteredRouter, Router } from './router'\nimport { Expand, IsAny, NoInfer, PickUnsafe } from './utils'\n\nexport const rootRouteId = '__root__' as const\nexport type RootRouteId = typeof rootRouteId\n\nexport type AnyLoaderData = {}\nexport type AnyPathParams = {}\nexport type AnySearchSchema = {}\nexport interface RouteMeta {}\n\n// The parse type here allows a zod schema to be passed directly to the validator\nexport type SearchSchemaValidator<TReturn, TParentSchema> =\n  | SearchSchemaValidatorObj<TReturn, TParentSchema>\n  | SearchSchemaValidatorFn<TReturn, TParentSchema>\n\nexport type SearchSchemaValidatorObj<TReturn, TParentSchema> = {\n  parse?: SearchSchemaValidatorFn<TReturn, TParentSchema>\n}\n\nexport type SearchSchemaValidatorFn<TReturn, TParentSchema> = (\n  searchObj: Record<string, unknown>,\n) => {} extends TParentSchema\n  ? TReturn\n  : keyof TReturn extends keyof TParentSchema\n  ? {\n      error: 'Top level search params cannot be redefined by child routes!'\n      keys: keyof TReturn & keyof TParentSchema\n    }\n  : TReturn\n\nexport type DefinedPathParamWarning =\n  'Path params cannot be redefined by child routes!'\n\nexport type ParentParams<TParentParams> = AnyPathParams extends TParentParams\n  ? {}\n  : {\n      [Key in keyof TParentParams]?: DefinedPathParamWarning\n    }\n\nexport type LoaderFn<\n  TRouteLoaderData extends AnyLoaderData = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams extends AnyPathParams = {},\n> = (\n  loaderContext: LoaderContext<TFullSearchSchema, TAllParams>,\n) => TRouteLoaderData | Promise<TRouteLoaderData>\n\nexport interface LoaderContext<\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams extends AnyPathParams = {},\n> {\n  params: TAllParams\n  search: TFullSearchSchema\n  signal?: AbortSignal\n  // parentLoaderPromise?: Promise<TParentRouteLoaderData>\n}\n\nexport type ActionFn<TActionPayload = unknown, TActionResponse = unknown> = (\n  submission: TActionPayload,\n) => TActionResponse | Promise<TActionResponse>\n\nexport type UnloaderFn<TPath extends string> = (\n  routeMatch: RouteMatch<any, RouteInfo<string, TPath>>,\n) => void\n\nexport type RouteOptions<\n  TRouteId extends string = string,\n  TPath extends string = string,\n  TParentRouteLoaderData extends AnyLoaderData = {},\n  TRouteLoaderData extends AnyLoaderData = {},\n  TParentLoaderData extends AnyLoaderData = {},\n  TLoaderData extends AnyLoaderData = {},\n  TActionPayload = unknown,\n  TActionResponse = unknown,\n  TParentSearchSchema extends {} = {},\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = TSearchSchema,\n  TParentParams extends AnyPathParams = {},\n  TParams extends Record<ParsePathParams<TPath>, unknown> = Record<\n    ParsePathParams<TPath>,\n    string\n  >,\n  TAllParams extends AnyPathParams = {},\n> = (\n  | {\n      // The path to match (relative to the nearest parent `Route` component or root basepath)\n      path: TPath\n    }\n  | {\n      id: TRouteId\n    }\n) & {\n  // If true, this route will be matched as case-sensitive\n  caseSensitive?: boolean\n  validateSearch?: SearchSchemaValidator<TSearchSchema, TParentSearchSchema>\n  // Filter functions that can manipulate search params *before* they are passed to links and navigate\n  // calls that match this route.\n  preSearchFilters?: SearchFilter<TFullSearchSchema>[]\n  // Filter functions that can manipulate search params *after* they are passed to links and navigate\n  // calls that match this route.\n  postSearchFilters?: SearchFilter<TFullSearchSchema>[]\n  // The content to be rendered when the route is matched. If no component is provided, defaults to `<Outlet />`\n  component?: GetFrameworkGeneric<'Component'> // , NoInfer<TParentLoaderData>>\n  // The content to be rendered when the route encounters an error\n  errorComponent?: GetFrameworkGeneric<'ErrorComponent'> // , NoInfer<TParentLoaderData>>\n  // If supported by your framework, the content to be rendered as the fallback content until the route is ready to render\n  pendingComponent?: GetFrameworkGeneric<'Component'> //, NoInfer<TParentLoaderData>>\n  // An asynchronous function responsible for preparing or fetching data for the route before it is rendered\n  loader?: LoaderFn<TRouteLoaderData, TFullSearchSchema, TAllParams>\n  // The max age to consider loader data fresh (not-stale) for this route in milliseconds from the time of fetch\n  // Defaults to 0. Only stale loader data is refetched.\n  loaderMaxAge?: number\n  // The max age to cache the loader data for this route in milliseconds from the time of route inactivity\n  // before it is garbage collected.\n  loaderGcMaxAge?: number\n  // An asynchronous function made available to the route for performing asynchronous or mutative actions that\n  // might invalidate the route's data.\n  action?: ActionFn<TActionPayload, TActionResponse>\n  // This async function is called before a route is loaded.\n  // If an error is thrown here, the route's loader will not be called.\n  // If thrown during a navigation, the navigation will be cancelled and the error will be passed to the `onLoadError` function.\n  // If thrown during a preload event, the error will be logged to the console.\n  beforeLoad?: (opts: {\n    router: Router<any, any, unknown>\n    match: RouteMatch\n  }) => Promise<void> | void\n  // This function will be called if the route's loader throws an error **during an attempted navigation**.\n  // If you want to redirect due to an error, call `router.navigate()` from within this function.\n  onLoadError?: (err: any) => void\n  // This function is called\n  // when moving from an inactive state to an active one. Likewise, when moving from\n  // an active to an inactive state, the return function (if provided) is called.\n  onLoaded?: (matchContext: {\n    params: TAllParams\n    search: TFullSearchSchema\n  }) =>\n    | void\n    | undefined\n    | ((match: { params: TAllParams; search: TFullSearchSchema }) => void)\n  // This function is called when the route remains active from one transition to the next.\n  onTransition?: (match: {\n    params: TAllParams\n    search: TFullSearchSchema\n  }) => void\n  // An object of whatever you want! This object is accessible anywhere matches are.\n  meta?: RouteMeta // TODO: Make this nested and mergeable\n} & (\n    | {\n        parseParams?: never\n        stringifyParams?: never\n      }\n    | {\n        // Parse params optionally receives path params as strings and returns them in a parsed format (like a number or boolean)\n        parseParams: (\n          rawParams: IsAny<TPath, any, Record<ParsePathParams<TPath>, string>>,\n        ) => TParams\n        stringifyParams: (\n          params: TParams,\n        ) => Record<ParsePathParams<TPath>, string>\n      }\n  ) &\n  (PickUnsafe<TParentParams, ParsePathParams<TPath>> extends never // Detect if an existing path param is being redefined\n    ? {}\n    : 'Cannot redefined path params in child routes!')\n\nexport type SearchFilter<T, U = T> = (prev: T) => U\n\nexport interface RouteConfig<\n  TId extends string = string,\n  TRouteId extends string = string,\n  TPath extends string = string,\n  TFullPath extends string = string,\n  TParentRouteLoaderData extends AnyLoaderData = AnyLoaderData,\n  TRouteLoaderData extends AnyLoaderData = AnyLoaderData,\n  TParentLoaderData extends AnyLoaderData = {},\n  TLoaderData extends AnyLoaderData = AnyLoaderData,\n  TActionPayload = unknown,\n  TActionResponse = unknown,\n  TParentSearchSchema extends {} = {},\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TParentParams extends AnyPathParams = {},\n  TParams extends AnyPathParams = {},\n  TAllParams extends AnyPathParams = {},\n  TKnownChildren = unknown,\n> {\n  id: TId\n  routeId: TRouteId\n  path: NoInfer<TPath>\n  fullPath: TFullPath\n  options: RouteOptions<\n    TRouteId,\n    TPath,\n    TParentRouteLoaderData,\n    TRouteLoaderData,\n    TParentLoaderData,\n    TLoaderData,\n    TActionPayload,\n    TActionResponse,\n    TParentSearchSchema,\n    TSearchSchema,\n    TFullSearchSchema,\n    TParentParams,\n    TParams,\n    TAllParams\n  >\n  children?: TKnownChildren\n  addChildren: IsAny<\n    TId,\n    any,\n    <TNewChildren extends any>(\n      children: TNewChildren extends AnyRouteConfig[]\n        ? TNewChildren\n        : { error: 'Invalid route detected'; route: TNewChildren },\n    ) => RouteConfig<\n      TId,\n      TRouteId,\n      TPath,\n      TFullPath,\n      TParentRouteLoaderData,\n      TRouteLoaderData,\n      TParentLoaderData,\n      TLoaderData,\n      TActionPayload,\n      TActionResponse,\n      TParentSearchSchema,\n      TSearchSchema,\n      TFullSearchSchema,\n      TParentParams,\n      TParams,\n      TAllParams,\n      TNewChildren\n    >\n  >\n  createRoute: CreateRouteConfigFn<\n    false,\n    TId,\n    TFullPath,\n    TRouteLoaderData,\n    TLoaderData,\n    TFullSearchSchema,\n    TAllParams\n  >\n  generate: GenerateFn<\n    TRouteId,\n    TPath,\n    TParentRouteLoaderData,\n    TParentLoaderData,\n    TParentSearchSchema,\n    TParentParams\n  >\n}\n\ntype GenerateFn<\n  TRouteId extends string = string,\n  TPath extends string = string,\n  TParentRouteLoaderData extends AnyLoaderData = AnyLoaderData,\n  TParentLoaderData extends AnyLoaderData = {},\n  TParentSearchSchema extends {} = {},\n  TParentParams extends AnyPathParams = {},\n> = <\n  TRouteLoaderData extends AnyLoaderData = AnyLoaderData,\n  TActionPayload = unknown,\n  TActionResponse = unknown,\n  TSearchSchema extends AnySearchSchema = {},\n  TParams extends Record<ParsePathParams<TPath>, unknown> = Record<\n    ParsePathParams<TPath>,\n    string\n  >,\n  TAllParams extends AnyPathParams extends TParams\n    ? Record<ParsePathParams<TPath>, string>\n    : NoInfer<TParams> = AnyPathParams extends TParams\n    ? Record<ParsePathParams<TPath>, string>\n    : NoInfer<TParams>,\n>(\n  options: Omit<\n    RouteOptions<\n      TRouteId,\n      TPath,\n      TParentRouteLoaderData,\n      TRouteLoaderData,\n      TParentLoaderData,\n      Expand<TParentLoaderData & NoInfer<TRouteLoaderData>>,\n      TActionPayload,\n      TActionResponse,\n      TParentSearchSchema,\n      TSearchSchema,\n      Expand<TParentSearchSchema & TSearchSchema>,\n      TParentParams,\n      TParams,\n      Expand<TParentParams & TAllParams>\n    >,\n    'path'\n  >,\n) => void\n\ntype CreateRouteConfigFn<\n  TIsRoot extends boolean = false,\n  TParentId extends string = string,\n  TParentPath extends string = string,\n  TParentRouteLoaderData extends AnyLoaderData = {},\n  TParentLoaderData extends AnyLoaderData = {},\n  TParentSearchSchema extends AnySearchSchema = {},\n  TParentParams extends AnyPathParams = {},\n> = <\n  TRouteId extends string,\n  TPath extends string,\n  TRouteLoaderData extends AnyLoaderData,\n  TActionPayload,\n  TActionResponse,\n  TSearchSchema extends AnySearchSchema = AnySearchSchema,\n  TParams extends Record<ParsePathParams<TPath>, unknown> = Record<\n    ParsePathParams<TPath>,\n    string\n  >,\n  TAllParams extends AnyPathParams extends TParams\n    ? Record<ParsePathParams<TPath>, string>\n    : NoInfer<TParams> = AnyPathParams extends TParams\n    ? Record<ParsePathParams<TPath>, string>\n    : NoInfer<TParams>,\n  TKnownChildren extends RouteConfig[] = RouteConfig[],\n  TResolvedId extends string = string extends TRouteId\n    ? string extends TPath\n      ? string\n      : TPath\n    : TRouteId,\n>(\n  options?: TIsRoot extends true\n    ? Omit<\n        RouteOptions<\n          TRouteId,\n          TPath,\n          TParentRouteLoaderData,\n          TRouteLoaderData,\n          TParentLoaderData,\n          Expand<TParentLoaderData & NoInfer<TRouteLoaderData>>,\n          TActionPayload,\n          TActionResponse,\n          TParentSearchSchema,\n          TSearchSchema,\n          Expand<TParentSearchSchema & TSearchSchema>,\n          TParentParams,\n          TParams,\n          Expand<TParentParams & TAllParams>\n        >,\n        'path'\n      > & { path?: never }\n    : RouteOptions<\n        TRouteId,\n        TPath,\n        TParentRouteLoaderData,\n        TRouteLoaderData,\n        TParentLoaderData,\n        Expand<TParentLoaderData & NoInfer<TRouteLoaderData>>,\n        TActionPayload,\n        TActionResponse,\n        TParentSearchSchema,\n        TSearchSchema,\n        Expand<TParentSearchSchema & TSearchSchema>,\n        TParentParams,\n        TParams,\n        Expand<TParentParams & TAllParams>\n      >,\n  children?: TKnownChildren,\n  isRoot?: boolean,\n  parentId?: string,\n  parentPath?: string,\n) => RouteConfig<\n  RoutePrefix<TParentId, TResolvedId>,\n  TResolvedId,\n  TPath,\n  string extends TPath ? '' : RoutePath<RoutePrefix<TParentPath, TPath>>,\n  TParentRouteLoaderData,\n  TRouteLoaderData,\n  TParentLoaderData,\n  Expand<TParentLoaderData & NoInfer<TRouteLoaderData>>,\n  TActionPayload,\n  TActionResponse,\n  TParentSearchSchema,\n  TSearchSchema,\n  Expand<TParentSearchSchema & TSearchSchema>,\n  TParentParams,\n  TParams,\n  Expand<TParentParams & TAllParams>,\n  TKnownChildren\n>\n\ntype RoutePath<T extends string> = T extends RootRouteId\n  ? '/'\n  : TrimPathRight<`${T}`>\n\ntype RoutePrefix<\n  TPrefix extends string,\n  TId extends string,\n> = string extends TId\n  ? RootRouteId\n  : TId extends string\n  ? `${TPrefix}/${TId}` extends '/'\n    ? '/'\n    : `/${TrimPathLeft<`${TrimPathRight<TPrefix>}/${TrimPath<TId>}`>}`\n  : never\n\nexport interface AnyRouteConfig\n  extends RouteConfig<\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  > {}\n\nexport interface AnyRouteConfigWithChildren<TChildren>\n  extends RouteConfig<\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    TChildren\n  > {}\n\ntype TrimPath<T extends string> = '' extends T\n  ? ''\n  : TrimPathRight<TrimPathLeft<T>>\n\ntype TrimPathLeft<T extends string> = T extends `${RootRouteId}/${infer U}`\n  ? TrimPathLeft<U>\n  : T extends `/${infer U}`\n  ? TrimPathLeft<U>\n  : T\ntype TrimPathRight<T extends string> = T extends '/'\n  ? '/'\n  : T extends `${infer U}/`\n  ? TrimPathRight<U>\n  : T\n\nexport const createRouteConfig: CreateRouteConfigFn<true> = (\n  options = {} as any,\n  children,\n  isRoot = true,\n  parentId,\n  parentPath,\n) => {\n  if (isRoot) {\n    ;(options as any).path = rootRouteId\n  }\n\n  // Strip the root from parentIds\n  if (parentId === rootRouteId) {\n    parentId = ''\n  }\n\n  let path: undefined | string = isRoot ? rootRouteId : options.path\n\n  // If the path is anything other than an index path, trim it up\n  if (path && path !== '/') {\n    path = trimPath(path)\n  }\n\n  const routeId = path || (options as { id?: string }).id\n\n  let id = joinPaths([parentId, routeId])\n\n  if (path === rootRouteId) {\n    path = '/'\n  }\n\n  if (id !== rootRouteId) {\n    id = joinPaths(['/', id])\n  }\n\n  const fullPath =\n    id === rootRouteId ? '/' : trimPathRight(joinPaths([parentPath, path]))\n\n  return {\n    id: id as any,\n    routeId: routeId as any,\n    path: path as any,\n    fullPath: fullPath as any,\n    options: options as any,\n    children,\n    addChildren: (children: any) =>\n      createRouteConfig(options, children, false, parentId, parentPath),\n    createRoute: (childOptions: any) =>\n      createRouteConfig(childOptions, undefined, false, id, fullPath) as any,\n    generate: () => {\n      invariant(\n        false,\n        `routeConfig.generate() is used by TanStack Router's file-based routing code generation and should not actually be called during runtime. `,\n      )\n    },\n  }\n}\n","/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function sharedClone<T>(prev: any, next: T, touchAll?: boolean): T {\n  const things = new Map()\n\n  function recurse(prev: any, next: any) {\n    if (prev === next) {\n      return prev\n    }\n\n    if (things.has(next)) {\n      return things.get(next)\n    }\n\n    const prevIsArray = Array.isArray(prev)\n    const nextIsArray = Array.isArray(next)\n    const prevIsObj = isPlainObject(prev)\n    const nextIsObj = isPlainObject(next)\n\n    const isArray = prevIsArray && nextIsArray\n    const isObj = prevIsObj && nextIsObj\n\n    const isSameStructure = isArray || isObj\n\n    // Both are arrays or objects\n    if (isSameStructure) {\n      const aSize = isArray ? prev.length : Object.keys(prev).length\n      const bItems = isArray ? next : Object.keys(next)\n      const bSize = bItems.length\n      const copy: any = isArray ? [] : {}\n\n      let equalItems = 0\n\n      for (let i = 0; i < bSize; i++) {\n        const key = isArray ? i : bItems[i]\n        if (copy[key] === prev[key]) {\n          equalItems++\n        }\n      }\n      if (aSize === bSize && equalItems === aSize) {\n        things.set(next, prev)\n        return prev\n      }\n      things.set(next, copy)\n      for (let i = 0; i < bSize; i++) {\n        const key = isArray ? i : bItems[i]\n        if (typeof bItems[i] === 'function') {\n          copy[key] = prev[key]\n        } else {\n          copy[key] = recurse(prev[key], next[key])\n        }\n        if (copy[key] === prev[key]) {\n          equalItems++\n        }\n      }\n\n      return copy\n    }\n\n    if (nextIsArray) {\n      const copy: any[] = []\n      things.set(next, copy)\n      for (let i = 0; i < next.length; i++) {\n        copy[i] = recurse(undefined, next[i])\n      }\n      return copy as T\n    }\n\n    if (nextIsObj) {\n      const copy = {} as any\n      things.set(next, copy)\n      const nextKeys = Object.keys(next)\n      for (let i = 0; i < nextKeys.length; i++) {\n        const key = nextKeys[i]!\n        copy[key] = recurse(undefined, next[key])\n      }\n      return copy as T\n    }\n\n    return next\n  }\n\n  return recurse(prev, next)\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nfunction isPlainObject(o: any) {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any) {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n","import { boolean } from 'zod'\nimport { GetFrameworkGeneric } from './frameworks'\nimport { Route } from './route'\nimport {\n  AnyAllRouteInfo,\n  AnyRouteInfo,\n  DefaultAllRouteInfo,\n  RouteInfo,\n} from './routeInfo'\nimport { Router } from './router'\nimport { batch, createStore } from '@solidjs/reactivity'\nimport { Expand } from './utils'\nimport { sharedClone } from './sharedClone'\n\nexport interface RouteMatchStore<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n> {\n  parentMatch?: RouteMatch\n  routeSearch: TRouteInfo['searchSchema']\n  search: Expand<\n    TAllRouteInfo['fullSearchSchema'] & TRouteInfo['fullSearchSchema']\n  >\n  status: 'idle' | 'loading' | 'success' | 'error'\n  updatedAt?: number\n  error?: unknown\n  invalid: boolean\n  isInvalid: boolean\n  loaderData: TRouteInfo['loaderData']\n  routeLoaderData: TRouteInfo['routeLoaderData']\n  isFetching: boolean\n  invalidAt: number\n}\n\nexport interface RouteMatch<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n> extends Route<TAllRouteInfo, TRouteInfo> {\n  store: RouteMatchStore<TAllRouteInfo, TRouteInfo>\n  // setStore: WritableStore<RouteMatchStore<TAllRouteInfo, TRouteInfo>>\n  matchId: string\n  pathname: string\n  params: TRouteInfo['allParams']\n  childMatches: RouteMatch[]\n  cancel: () => void\n  load: (\n    loaderOpts?:\n      | { preload: true; maxAge: number; gcMaxAge: number }\n      | { preload?: false; maxAge?: never; gcMaxAge?: never },\n  ) => Promise<TRouteInfo['routeLoaderData']>\n  fetch: (opts?: { maxAge?: number }) => Promise<TRouteInfo['routeLoaderData']>\n  invalidate: () => void\n  hasLoaders: () => boolean\n  __: {\n    setParentMatch: (parentMatch?: RouteMatch) => void\n    component?: GetFrameworkGeneric<'Component'>\n    errorComponent?: GetFrameworkGeneric<'ErrorComponent'>\n    pendingComponent?: GetFrameworkGeneric<'Component'>\n    loadPromise?: Promise<void>\n    onExit?:\n      | void\n      | ((matchContext: {\n          params: TRouteInfo['allParams']\n          search: TRouteInfo['fullSearchSchema']\n        }) => void)\n    abortController: AbortController\n    validate: () => void\n  }\n}\n\nconst componentTypes = [\n  'component',\n  'errorComponent',\n  'pendingComponent',\n] as const\n\nexport function createRouteMatch<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n>(\n  router: Router<any, any, any>,\n  route: Route<TAllRouteInfo, TRouteInfo>,\n  opts: {\n    parentMatch?: RouteMatch<any, any>\n    matchId: string\n    params: TRouteInfo['allParams']\n    pathname: string\n  },\n): RouteMatch<TAllRouteInfo, TRouteInfo> {\n  let componentsPromise: Promise<void>\n  let dataPromise: Promise<TRouteInfo['routeLoaderData']>\n  let latestId = ''\n  let resolve = () => {}\n\n  function setLoaderData(loaderData: TRouteInfo['routeLoaderData']) {\n    batch(() => {\n      setStore((s) => {\n        s.routeLoaderData = sharedClone(s.routeLoaderData, loaderData)\n      })\n      updateLoaderData()\n    })\n  }\n\n  function updateLoaderData() {\n    setStore((s) => {\n      s.loaderData = sharedClone(s.loaderData, {\n        ...store.parentMatch?.store.loaderData,\n        ...s.routeLoaderData,\n      }) as TRouteInfo['loaderData']\n    })\n  }\n\n  const [store, setStore] = createStore<\n    RouteMatchStore<TAllRouteInfo, TRouteInfo>\n  >({\n    routeSearch: {},\n    search: {} as any,\n    status: 'idle',\n    routeLoaderData: {} as TRouteInfo['routeLoaderData'],\n    loaderData: {} as TRouteInfo['loaderData'],\n    isFetching: false,\n    invalid: false,\n    invalidAt: Infinity,\n    get isInvalid(): boolean {\n      const now = Date.now()\n      return this.invalid || this.invalidAt < now\n    },\n  })\n\n  const routeMatch: RouteMatch<TAllRouteInfo, TRouteInfo> = {\n    ...route,\n    ...opts,\n    store,\n    // setStore,\n    router,\n    childMatches: [],\n    __: {\n      setParentMatch: (parentMatch?: RouteMatch) => {\n        batch(() => {\n          setStore((s) => {\n            s.parentMatch = parentMatch\n          })\n\n          updateLoaderData()\n        })\n      },\n      abortController: new AbortController(),\n      validate: () => {\n        // Validate the search params and stabilize them\n        const parentSearch =\n          store.parentMatch?.store.search ?? router.store.currentLocation.search\n\n        try {\n          const prevSearch = store.routeSearch\n\n          const validator =\n            typeof routeMatch.options.validateSearch === 'object'\n              ? routeMatch.options.validateSearch.parse\n              : routeMatch.options.validateSearch\n\n          let nextSearch = sharedClone(\n            prevSearch,\n            validator?.(parentSearch) ?? {},\n          )\n\n          batch(() => {\n            // Invalidate route matches when search param stability changes\n            if (prevSearch !== nextSearch) {\n              setStore((s) => (s.invalid = true))\n            }\n\n            // TODO: Alright, do we need batch() here?\n            setStore((s) => {\n              s.routeSearch = nextSearch\n              s.search = sharedClone(parentSearch, {\n                ...parentSearch,\n                ...nextSearch,\n              })\n            })\n          })\n\n          componentTypes.map(async (type) => {\n            const component = routeMatch.options[type]\n\n            if (typeof routeMatch.__[type] !== 'function') {\n              routeMatch.__[type] = component\n            }\n          })\n        } catch (err: any) {\n          console.error(err)\n          const error = new (Error as any)('Invalid search params found', {\n            cause: err,\n          })\n          error.code = 'INVALID_SEARCH_PARAMS'\n\n          setStore((s) => {\n            s.status = 'error'\n            s.error = error\n          })\n\n          // Do not proceed with loading the route\n          return\n        }\n      },\n    },\n    cancel: () => {\n      routeMatch.__.abortController?.abort()\n    },\n    invalidate: () => {\n      setStore((s) => (s.invalid = true))\n    },\n    hasLoaders: () => {\n      return !!(\n        route.options.loader ||\n        componentTypes.some((d) => route.options[d]?.preload)\n      )\n    },\n    load: async (loaderOpts) => {\n      const now = Date.now()\n      const minMaxAge = loaderOpts?.preload\n        ? Math.max(loaderOpts?.maxAge, loaderOpts?.gcMaxAge)\n        : 0\n\n      // If this is a preload, add it to the preload cache\n      if (loaderOpts?.preload && minMaxAge > 0) {\n        // If the match is currently active, don't preload it\n        if (\n          router.store.currentMatches.find(\n            (d) => d.matchId === routeMatch.matchId,\n          )\n        ) {\n          return\n        }\n\n        router.store.matchCache[routeMatch.matchId] = {\n          gc: now + loaderOpts.gcMaxAge,\n          match: routeMatch as RouteMatch<any, any>,\n        }\n      }\n\n      // If the match is invalid, errored or idle, trigger it to load\n      if (\n        (store.status === 'success' && store.isInvalid) ||\n        store.status === 'error' ||\n        store.status === 'idle'\n      ) {\n        const maxAge = loaderOpts?.preload ? loaderOpts?.maxAge : undefined\n\n        await routeMatch.fetch({ maxAge })\n      }\n    },\n    fetch: async (opts) => {\n      const loadId = '' + Date.now() + Math.random()\n      latestId = loadId\n      const checkLatest = async () => {\n        if (loadId !== latestId) {\n          // warning(true, 'Data loader is out of date!')\n          return new Promise(() => {})\n        }\n      }\n\n      batch(() => {\n        // If the match was in an error state, set it\n        // to a loading state again. Otherwise, keep it\n        // as loading or resolved\n        if (store.status === 'idle') {\n          setStore((s) => (s.status = 'loading'))\n        }\n\n        // We started loading the route, so it's no longer invalid\n        setStore((s) => (s.invalid = false))\n      })\n\n      routeMatch.__.loadPromise = new Promise(async (r) => {\n        // We are now fetching, even if it's in the background of a\n        // resolved state\n        setStore((s) => (s.isFetching = true))\n        resolve = r as () => void\n\n        componentsPromise = (async () => {\n          // then run all component and data loaders in parallel\n          // For each component type, potentially load it asynchronously\n\n          await Promise.all(\n            componentTypes.map(async (type) => {\n              const component = routeMatch.options[type]\n\n              if (routeMatch.__[type]?.preload) {\n                routeMatch.__[type] = await router.options.loadComponent!(\n                  component,\n                )\n              }\n            }),\n          )\n        })()\n\n        dataPromise = Promise.resolve().then(async () => {\n          try {\n            if (routeMatch.options.loader) {\n              const data = await router.loadMatchData(routeMatch)\n              await checkLatest()\n\n              setLoaderData(data)\n            }\n\n            setStore((s) => {\n              s.error = undefined\n              s.status = 'success'\n              s.updatedAt = Date.now()\n              s.invalidAt =\n                s.updatedAt +\n                (opts?.maxAge ??\n                  routeMatch.options.loaderMaxAge ??\n                  router.options.defaultLoaderMaxAge ??\n                  0)\n            })\n\n            return store.routeLoaderData\n          } catch (err) {\n            await checkLatest()\n\n            if (process.env.NODE_ENV !== 'production') {\n              console.error(err)\n            }\n\n            setStore((s) => {\n              s.error = err\n              s.status = 'error'\n              s.updatedAt = Date.now()\n            })\n\n            throw err\n          }\n        })\n\n        const after = async () => {\n          await checkLatest()\n          setStore((s) => (s.isFetching = false))\n          delete routeMatch.__.loadPromise\n          resolve()\n        }\n\n        try {\n          await Promise.all([componentsPromise, dataPromise.catch(() => {})])\n          after()\n        } catch {\n          after()\n        }\n      })\n\n      await routeMatch.__.loadPromise\n      await checkLatest()\n    },\n  }\n\n  if (!routeMatch.hasLoaders()) {\n    setStore((s) => (s.status = 'success'))\n  }\n\n  return routeMatch\n}\n","import { decode, encode } from './qss'\nimport { AnySearchSchema } from './routeConfig'\n\nexport const defaultParseSearch = parseSearchWith(JSON.parse)\nexport const defaultStringifySearch = stringifySearchWith(JSON.stringify)\n\nexport function parseSearchWith(parser: (str: string) => any) {\n  return (searchStr: string): AnySearchSchema => {\n    if (searchStr.substring(0, 1) === '?') {\n      searchStr = searchStr.substring(1)\n    }\n\n    let query: Record<string, unknown> = decode(searchStr)\n\n    // Try to parse any query params that might be json\n    for (let key in query) {\n      const value = query[key]\n      if (typeof value === 'string') {\n        try {\n          query[key] = parser(value)\n        } catch (err) {\n          //\n        }\n      }\n    }\n\n    return query\n  }\n}\n\nexport function stringifySearchWith(stringify: (search: any) => string) {\n  return (search: Record<string, any>) => {\n    search = { ...search }\n\n    if (search) {\n      Object.keys(search).forEach((key) => {\n        const val = search[key]\n        if (typeof val === 'undefined' || val === undefined) {\n          delete search[key]\n        } else if (val && typeof val === 'object' && val !== null) {\n          try {\n            search[key] = stringify(val)\n          } catch (err) {\n            // silent\n          }\n        }\n      })\n    }\n\n    const searchStr = encode(search as Record<string, string>).toString()\n\n    return searchStr ? `?${searchStr}` : ''\n  }\n}\n","import {\n  BrowserHistory,\n  createBrowserHistory,\n  createMemoryHistory,\n  HashHistory,\n  History,\n  MemoryHistory,\n} from 'history'\nimport invariant from 'tiny-invariant'\nimport { GetFrameworkGeneric } from './frameworks'\n\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ToOptions,\n  ValidFromPath,\n  ResolveRelativePath,\n} from './link'\nimport {\n  cleanPath,\n  interpolatePath,\n  joinPaths,\n  matchPathname,\n  resolvePath,\n  trimPath,\n} from './path'\nimport { AnyRoute, createRoute, Route } from './route'\nimport {\n  AnyLoaderData,\n  AnyPathParams,\n  AnyRouteConfig,\n  AnySearchSchema,\n  LoaderContext,\n  RouteConfig,\n  SearchFilter,\n} from './routeConfig'\nimport {\n  AllRouteInfo,\n  AnyAllRouteInfo,\n  AnyRouteInfo,\n  RouteInfo,\n  RoutesById,\n} from './routeInfo'\nimport { createRouteMatch, RouteMatch, RouteMatchStore } from './routeMatch'\nimport { defaultParseSearch, defaultStringifySearch } from './searchParams'\nimport { createStore, batch, SetStoreFunction } from '@solidjs/reactivity'\nimport {\n  functionalUpdate,\n  last,\n  NoInfer,\n  pick,\n  PickAsRequired,\n  PickRequired,\n  Timeout,\n  Updater,\n} from './utils'\nimport { sharedClone } from './sharedClone'\n\nexport interface RegisterRouter {\n  // router: Router\n}\n\nexport type RegisteredRouter = RegisterRouter extends {\n  router: Router<infer TRouteConfig, infer TAllRouteInfo, infer TRouterContext>\n}\n  ? Router<TRouteConfig, TAllRouteInfo, TRouterContext>\n  : Router\n\nexport type RegisteredAllRouteInfo = RegisterRouter extends {\n  router: Router<infer TRouteConfig, infer TAllRouteInfo, infer TRouterContext>\n}\n  ? TAllRouteInfo\n  : AnyAllRouteInfo\n\nexport interface LocationState {}\n\nexport interface Location<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  href: string\n  pathname: string\n  search: TSearchObj\n  searchStr: string\n  state: TState\n  hash: string\n  key?: string\n}\n\nexport interface FromLocation {\n  pathname: string\n  search?: unknown\n  key?: string\n  hash?: string\n}\n\nexport type SearchSerializer = (searchObj: Record<string, any>) => string\nexport type SearchParser = (searchStr: string) => Record<string, any>\nexport type FilterRoutesFn = <TRoute extends Route<any, RouteInfo>>(\n  routeConfigs: TRoute[],\n) => TRoute[]\n\nexport interface RouterOptions<\n  TRouteConfig extends AnyRouteConfig,\n  TRouterContext,\n> {\n  history?: BrowserHistory | MemoryHistory | HashHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n  filterRoutes?: FilterRoutesFn\n  defaultPreload?: false | 'intent'\n  defaultPreloadMaxAge?: number\n  defaultPreloadGcMaxAge?: number\n  defaultPreloadDelay?: number\n  defaultComponent?: GetFrameworkGeneric<'Component'>\n  defaultErrorComponent?: GetFrameworkGeneric<'ErrorComponent'>\n  defaultPendingComponent?: GetFrameworkGeneric<'Component'>\n  defaultLoaderMaxAge?: number\n  defaultLoaderGcMaxAge?: number\n  caseSensitive?: boolean\n  routeConfig?: TRouteConfig\n  basepath?: string\n  useServerData?: boolean\n  createRouter?: (router: Router<any, any, any>) => void\n  createRoute?: (opts: {\n    route: AnyRoute\n    router: Router<any, any, any>\n  }) => void\n  context?: TRouterContext\n  loadComponent?: (\n    component: GetFrameworkGeneric<'Component'>,\n  ) => Promise<GetFrameworkGeneric<'Component'>>\n}\n\nexport interface Action<\n  TPayload = unknown,\n  TResponse = unknown,\n  // TError = unknown,\n> {\n  submit: (\n    submission?: TPayload,\n    actionOpts?: { invalidate?: boolean; multi?: boolean },\n  ) => Promise<TResponse>\n  current?: ActionState<TPayload, TResponse>\n  latest?: ActionState<TPayload, TResponse>\n  submissions: ActionState<TPayload, TResponse>[]\n}\n\nexport interface ActionState<\n  TPayload = unknown,\n  TResponse = unknown,\n  // TError = unknown,\n> {\n  submittedAt: number\n  status: 'idle' | 'pending' | 'success' | 'error'\n  submission: TPayload\n  isMulti: boolean\n  data?: TResponse\n  error?: unknown\n}\n\nexport interface Loader<\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams extends AnyPathParams = {},\n  TRouteLoaderData = AnyLoaderData,\n> {\n  fetch: keyof PickRequired<TFullSearchSchema> extends never\n    ? keyof TAllParams extends never\n      ? (loaderContext: { signal?: AbortSignal }) => Promise<TRouteLoaderData>\n      : (loaderContext: {\n          params: TAllParams\n          search?: TFullSearchSchema\n          signal?: AbortSignal\n        }) => Promise<TRouteLoaderData>\n    : keyof TAllParams extends never\n    ? (loaderContext: {\n        search: TFullSearchSchema\n        params: TAllParams\n        signal?: AbortSignal\n      }) => Promise<TRouteLoaderData>\n    : (loaderContext: {\n        search: TFullSearchSchema\n        signal?: AbortSignal\n      }) => Promise<TRouteLoaderData>\n  current?: LoaderState<TFullSearchSchema, TAllParams>\n  latest?: LoaderState<TFullSearchSchema, TAllParams>\n  pending: LoaderState<TFullSearchSchema, TAllParams>[]\n}\n\nexport interface LoaderState<\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams extends AnyPathParams = {},\n> {\n  loadedAt: number\n  loaderContext: LoaderContext<TFullSearchSchema, TAllParams>\n}\n\nexport interface RouterStore<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  status: 'idle' | 'loading'\n  latestLocation: Location<TSearchObj, TState>\n  currentMatches: RouteMatch[]\n  currentLocation: Location<TSearchObj, TState>\n  pendingMatches?: RouteMatch[]\n  pendingLocation?: Location<TSearchObj, TState>\n  lastUpdated: number\n  actions: Record<string, Action>\n  loaders: Record<string, Loader>\n  isFetching: boolean\n  isPreloading: boolean\n  matchCache: Record<string, MatchCacheEntry>\n}\n\ntype Listener = (router: Router<any, any, any>) => void\n\nexport type ListenerFn = () => void\n\nexport interface BuildNextOptions {\n  to?: string | number | null\n  params?: true | Updater<unknown>\n  search?: true | Updater<unknown>\n  hash?: true | Updater<string>\n  state?: LocationState\n  key?: string\n  from?: string\n  fromCurrent?: boolean\n  __preSearchFilters?: SearchFilter<any>[]\n  __postSearchFilters?: SearchFilter<any>[]\n}\n\nexport type MatchCacheEntry = {\n  gc: number\n  match: RouteMatch\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n  fromCurrent?: boolean\n}\n\nexport interface MatchRouteOptions {\n  pending?: boolean\n  caseSensitive?: boolean\n  fuzzy?: boolean\n}\n\ntype LinkCurrentTargetElement = {\n  preloadTimeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface DehydratedRouterState\n  extends Pick<\n    RouterStore,\n    'status' | 'latestLocation' | 'currentLocation' | 'lastUpdated'\n  > {\n  currentMatches: DehydratedRouteMatch[]\n}\n\nexport interface DehydratedRouter<TRouterContext = unknown> {\n  // location: Router['__location']\n  store: DehydratedRouterState\n  context: TRouterContext\n}\n\nexport type MatchCache = Record<string, MatchCacheEntry>\n\ninterface DehydratedRouteMatch {\n  matchId: string\n  store: Pick<\n    RouteMatchStore<any, any>,\n    'status' | 'routeLoaderData' | 'isInvalid' | 'invalidAt'\n  >\n}\n\nexport interface RouterContext {}\n\nexport interface Router<\n  TRouteConfig extends AnyRouteConfig = RouteConfig,\n  TAllRouteInfo extends AnyAllRouteInfo = AllRouteInfo<TRouteConfig>,\n  TRouterContext = unknown,\n> {\n  types: {\n    // Super secret internal stuff\n    RouteConfig: TRouteConfig\n    AllRouteInfo: TAllRouteInfo\n  }\n\n  // Public API\n  history: BrowserHistory | MemoryHistory | HashHistory\n  options: PickAsRequired<\n    RouterOptions<TRouteConfig, TRouterContext>,\n    'stringifySearch' | 'parseSearch' | 'context'\n  >\n  store: RouterStore<TAllRouteInfo['fullSearchSchema']>\n  setStore: SetStoreFunction<RouterStore<TAllRouteInfo['fullSearchSchema']>>\n  basepath: string\n  // __location: Location<TAllRouteInfo['fullSearchSchema']>\n  routeTree: Route<TAllRouteInfo, RouteInfo>\n  routesById: RoutesById<TAllRouteInfo>\n  reset: () => void\n  mount: () => () => void\n  update: <\n    TRouteConfig extends RouteConfig = RouteConfig,\n    TAllRouteInfo extends AnyAllRouteInfo = AllRouteInfo<TRouteConfig>,\n    TRouterContext = unknown,\n  >(\n    opts?: RouterOptions<TRouteConfig, TRouterContext>,\n  ) => Router<TRouteConfig, TAllRouteInfo, TRouterContext>\n\n  buildNext: (opts: BuildNextOptions) => Location\n  cancelMatches: () => void\n  load: (next?: Location) => Promise<void>\n  cleanMatchCache: () => void\n  getRoute: <TId extends keyof TAllRouteInfo['routeInfoById']>(\n    id: TId,\n  ) => Route<TAllRouteInfo, TAllRouteInfo['routeInfoById'][TId]>\n  loadRoute: (navigateOpts: BuildNextOptions) => Promise<RouteMatch[]>\n  preloadRoute: (\n    navigateOpts: BuildNextOptions,\n    loaderOpts: { maxAge?: number; gcMaxAge?: number },\n  ) => Promise<RouteMatch[]>\n  matchRoutes: (\n    pathname: string,\n    opts?: { strictParseParams?: boolean },\n  ) => RouteMatch[]\n  loadMatches: (\n    resolvedMatches: RouteMatch[],\n    loaderOpts?:\n      | { preload: true; maxAge: number; gcMaxAge: number }\n      | { preload?: false; maxAge?: never; gcMaxAge?: never },\n  ) => Promise<void>\n  loadMatchData: (\n    routeMatch: RouteMatch<any, any>,\n  ) => Promise<Record<string, unknown>>\n  invalidateRoute: (opts: MatchLocation) => void\n  reload: () => Promise<void>\n  resolvePath: (from: string, path: string) => string\n  navigate: <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >(\n    opts: NavigateOptions<TAllRouteInfo, TFrom, TTo>,\n  ) => Promise<void>\n  matchRoute: <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >(\n    matchLocation: ToOptions<TAllRouteInfo, TFrom, TTo>,\n    opts?: MatchRouteOptions,\n  ) =>\n    | false\n    | TAllRouteInfo['routeInfoById'][ResolveRelativePath<\n        TFrom,\n        NoInfer<TTo>\n      >]['allParams']\n  buildLink: <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >(\n    opts: LinkOptions<TAllRouteInfo, TFrom, TTo>,\n  ) => LinkInfo\n  dehydrate: () => DehydratedRouter<TRouterContext>\n  hydrate: (dehydratedRouter: DehydratedRouter<TRouterContext>) => void\n}\n\n// Detect if we're in the DOM\nconst isServer =\n  typeof window === 'undefined' || !window.document?.createElement\n\n// This is the default history object if none is defined\nconst createDefaultHistory = () =>\n  isServer ? createMemoryHistory() : createBrowserHistory()\n\nfunction getInitialRouterState(): RouterStore {\n  return {\n    status: 'idle',\n    latestLocation: null!,\n    currentLocation: null!,\n    currentMatches: [],\n    actions: {},\n    loaders: {},\n    lastUpdated: Date.now(),\n    matchCache: {},\n    get isFetching() {\n      return (\n        this.status === 'loading' ||\n        this.currentMatches.some((d) => d.store.isFetching)\n      )\n    },\n    get isPreloading() {\n      return Object.values(this.matchCache).some(\n        (d) =>\n          d.match.store.isFetching &&\n          !this.currentMatches.find((dd) => dd.matchId === d.match.matchId),\n      )\n    },\n  }\n}\n\nexport function createRouter<\n  TRouteConfig extends AnyRouteConfig = RouteConfig,\n  TAllRouteInfo extends AnyAllRouteInfo = AllRouteInfo<TRouteConfig>,\n  TRouterContext = unknown,\n>(\n  userOptions?: RouterOptions<TRouteConfig, TRouterContext>,\n): Router<TRouteConfig, TAllRouteInfo, TRouterContext> {\n  const originalOptions = {\n    defaultLoaderGcMaxAge: 5 * 60 * 1000,\n    defaultLoaderMaxAge: 0,\n    defaultPreloadMaxAge: 2000,\n    defaultPreloadDelay: 50,\n    context: undefined!,\n    ...userOptions,\n    stringifySearch: userOptions?.stringifySearch ?? defaultStringifySearch,\n    parseSearch: userOptions?.parseSearch ?? defaultParseSearch,\n  }\n\n  const [store, setStore] = createStore<RouterStore>(getInitialRouterState())\n\n  let navigateTimeout: undefined | Timeout\n  let nextAction: undefined | 'push' | 'replace'\n  let navigationPromise: undefined | Promise<void>\n\n  let startedLoadingAt = Date.now()\n  let resolveNavigation = () => {}\n\n  function onFocus() {\n    router.load()\n  }\n\n  function buildRouteTree(rootRouteConfig: RouteConfig) {\n    const recurseRoutes = (\n      routeConfigs: RouteConfig[],\n      parent?: Route<TAllRouteInfo, any, any>,\n    ): Route<TAllRouteInfo, any, any>[] => {\n      return routeConfigs.map((routeConfig, i) => {\n        const routeOptions = routeConfig.options\n        const route = createRoute(routeConfig, routeOptions, i, parent, router)\n        const existingRoute = (router.routesById as any)[route.routeId]\n\n        if (existingRoute) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `Duplicate routes found with id: ${String(route.routeId)}`,\n              router.routesById,\n              route,\n            )\n          }\n          throw new Error()\n        }\n\n        ;(router.routesById as any)[route.routeId] = route\n\n        const children = routeConfig.children as RouteConfig[]\n\n        route.childRoutes = children?.length\n          ? recurseRoutes(children, route)\n          : undefined\n\n        return route\n      })\n    }\n\n    const routes = recurseRoutes([rootRouteConfig])\n\n    return routes[0]!\n  }\n\n  function parseLocation(\n    location: History['location'],\n    previousLocation?: Location,\n  ): Location {\n    const parsedSearch = router.options.parseSearch(location.search)\n\n    return {\n      pathname: location.pathname,\n      searchStr: location.search,\n      search: sharedClone(previousLocation?.search, parsedSearch),\n      hash: location.hash.split('#').reverse()[0] ?? '',\n      href: `${location.pathname}${location.search}${location.hash}`,\n      state: location.state as LocationState,\n      key: location.key,\n    }\n  }\n\n  function navigate(location: BuildNextOptions & { replace?: boolean }) {\n    const next = router.buildNext(location)\n    return commitLocation(next, location.replace)\n  }\n\n  function buildLocation(dest: BuildNextOptions = {}): Location {\n    const fromPathname = dest.fromCurrent\n      ? store.latestLocation.pathname\n      : dest.from ?? store.latestLocation.pathname\n\n    let pathname = resolvePath(\n      router.basepath ?? '/',\n      fromPathname,\n      `${dest.to ?? '.'}`,\n    )\n\n    const fromMatches = router.matchRoutes(store.latestLocation.pathname, {\n      strictParseParams: true,\n    })\n\n    const toMatches = router.matchRoutes(pathname)\n\n    const prevParams = { ...last(fromMatches)?.params }\n\n    let nextParams =\n      (dest.params ?? true) === true\n        ? prevParams\n        : functionalUpdate(dest.params!, prevParams)\n\n    if (nextParams) {\n      toMatches\n        .map((d) => d.options.stringifyParams)\n        .filter(Boolean)\n        .forEach((fn) => {\n          Object.assign({}, nextParams!, fn!(nextParams!))\n        })\n    }\n\n    pathname = interpolatePath(pathname, nextParams ?? {})\n\n    // Pre filters first\n    const preFilteredSearch = dest.__preSearchFilters?.length\n      ? dest.__preSearchFilters.reduce(\n          (prev, next) => next(prev),\n          store.latestLocation.search,\n        )\n      : store.latestLocation.search\n\n    // Then the link/navigate function\n    const destSearch =\n      dest.search === true\n        ? preFilteredSearch // Preserve resolvedFrom true\n        : dest.search\n        ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n        : dest.__preSearchFilters?.length\n        ? preFilteredSearch // Preserve resolvedFrom filters\n        : {}\n\n    // Then post filters\n    const postFilteredSearch = dest.__postSearchFilters?.length\n      ? dest.__postSearchFilters.reduce((prev, next) => next(prev), destSearch)\n      : destSearch\n\n    const search = sharedClone(store.latestLocation.search, postFilteredSearch)\n\n    const searchStr = router.options.stringifySearch(search)\n    let hash =\n      dest.hash === true\n        ? store.latestLocation.hash\n        : functionalUpdate(dest.hash!, store.latestLocation.hash)\n    hash = hash ? `#${hash}` : ''\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: store.latestLocation.state,\n      hash,\n      href: `${pathname}${searchStr}${hash}`,\n      key: dest.key,\n    }\n  }\n\n  function commitLocation(next: Location, replace?: boolean): Promise<void> {\n    const id = '' + Date.now() + Math.random()\n\n    if (navigateTimeout) clearTimeout(navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl = parseLocation(router.history.location).href === next.href\n\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace'\n    }\n\n    router.history[nextAction](\n      {\n        pathname: next.pathname,\n        hash: next.hash,\n        search: next.searchStr,\n      },\n      {\n        id,\n        ...next.state,\n      },\n    )\n\n    return (navigationPromise = new Promise((resolve) => {\n      const previousNavigationResolve = resolveNavigation\n\n      resolveNavigation = () => {\n        previousNavigationResolve()\n        resolve()\n      }\n    }))\n  }\n\n  const router: Router<TRouteConfig, TAllRouteInfo, TRouterContext> = {\n    types: undefined!,\n\n    // public api\n    history: userOptions?.history || createDefaultHistory(),\n    store,\n    setStore,\n    options: originalOptions,\n    basepath: '',\n    routeTree: undefined!,\n    routesById: {} as any,\n\n    reset: () => {\n      setStore((s) => Object.assign(s, getInitialRouterState()))\n    },\n\n    getRoute: (id) => {\n      return router.routesById[id]\n    },\n\n    dehydrate: () => {\n      return {\n        store: {\n          ...pick(store, [\n            'latestLocation',\n            'currentLocation',\n            'status',\n            'lastUpdated',\n          ]),\n          currentMatches: store.currentMatches.map((match) => ({\n            matchId: match.matchId,\n            store: pick(match.store, [\n              'status',\n              'routeLoaderData',\n              'isInvalid',\n              'invalidAt',\n            ]),\n          })),\n        },\n        context: router.options.context as TRouterContext,\n      }\n    },\n\n    hydrate: (dehydratedRouter) => {\n      setStore((s) => {\n        // Update the context TODO: make this part of state?\n        router.options.context = dehydratedRouter.context\n\n        // Match the routes\n        const currentMatches = router.matchRoutes(\n          dehydratedRouter.store.latestLocation.pathname,\n          {\n            strictParseParams: true,\n          },\n        )\n\n        currentMatches.forEach((match, index) => {\n          const dehydratedMatch = dehydratedRouter.store.currentMatches[index]\n          invariant(\n            dehydratedMatch && dehydratedMatch.matchId === match.matchId,\n            'Oh no! There was a hydration mismatch when attempting to restore the state of the router! 😬',\n          )\n          Object.assign(match, dehydratedMatch)\n        })\n\n        currentMatches.forEach((match) => match.__.validate())\n\n        Object.assign(s, { ...dehydratedRouter.store, currentMatches })\n      })\n    },\n\n    mount: () => {\n      // Mount only does anything on the client\n      if (!isServer) {\n        // If the router matches are empty, load the matches\n        if (!store.currentMatches.length) {\n          router.load()\n        }\n\n        const unsub = router.history.listen((event) => {\n          router.load(parseLocation(event.location, store.latestLocation))\n        })\n\n        // addEventListener does not exist in React Native, but window does\n        // In the future, we might need to invert control here for more adapters\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (window.addEventListener) {\n          // Listen to visibilitychange and focus\n          window.addEventListener('visibilitychange', onFocus, false)\n          window.addEventListener('focus', onFocus, false)\n        }\n\n        return () => {\n          unsub()\n          if (window.removeEventListener) {\n            // Be sure to unsubscribe if a new handler is set\n            window.removeEventListener('visibilitychange', onFocus)\n            window.removeEventListener('focus', onFocus)\n          }\n        }\n      }\n\n      return () => {}\n    },\n\n    update: (opts) => {\n      const newHistory = opts?.history !== router.history\n      if (!store.latestLocation || newHistory) {\n        if (opts?.history) {\n          router.history = opts.history\n        }\n        setStore((s) => {\n          s.latestLocation = parseLocation(router.history.location)\n          s.currentLocation = s.latestLocation\n        })\n      }\n\n      Object.assign(router.options, opts)\n\n      const { basepath, routeConfig } = router.options\n\n      router.basepath = `/${trimPath(basepath ?? '') ?? ''}`\n\n      if (routeConfig) {\n        router.routesById = {} as any\n        router.routeTree = buildRouteTree(routeConfig)\n      }\n\n      return router as any\n    },\n\n    cancelMatches: () => {\n      ;[...store.currentMatches, ...(store.pendingMatches || [])].forEach(\n        (match) => {\n          match.cancel()\n        },\n      )\n    },\n\n    load: async (next?: Location) => {\n      let now = Date.now()\n      const startedAt = now\n      startedLoadingAt = startedAt\n\n      // Cancel any pending matches\n      router.cancelMatches()\n\n      let matches!: RouteMatch<any, any>[]\n\n      batch(() => {\n        if (next) {\n          // Ingest the new location\n          setStore((s) => {\n            s.latestLocation = next\n          })\n        }\n\n        // Match the routes\n        matches = router.matchRoutes(store.latestLocation.pathname, {\n          strictParseParams: true,\n        })\n\n        console.log('set loading', matches)\n        setStore((s) => {\n          s.status = 'loading'\n          s.pendingMatches = matches\n          s.pendingLocation = store.latestLocation\n        })\n      })\n\n      // Load the matches\n      try {\n        await router.loadMatches(matches)\n      } catch (err: any) {\n        console.log(err)\n        invariant(\n          false,\n          'Matches failed to load due to error above ☝️. Navigation cancelled!',\n        )\n      }\n\n      if (startedLoadingAt !== startedAt) {\n        // Ignore side-effects of outdated side-effects\n        return navigationPromise\n      }\n\n      const previousMatches = store.currentMatches\n\n      const exiting: RouteMatch[] = [],\n        staying: RouteMatch[] = []\n\n      previousMatches.forEach((d) => {\n        if (matches.find((dd) => dd.matchId === d.matchId)) {\n          staying.push(d)\n        } else {\n          exiting.push(d)\n        }\n      })\n\n      const entering = matches.filter((d) => {\n        return !previousMatches.find((dd) => dd.matchId === d.matchId)\n      })\n\n      now = Date.now()\n\n      exiting.forEach((d) => {\n        d.__.onExit?.({\n          params: d.params,\n          search: d.store.routeSearch,\n        })\n\n        // Clear idle error states when match leaves\n        if (d.store.status === 'error' && !d.store.isFetching) {\n          d.store.status = 'idle'\n          d.store.error = undefined\n        }\n\n        const gc = Math.max(\n          d.options.loaderGcMaxAge ?? router.options.defaultLoaderGcMaxAge ?? 0,\n          d.options.loaderMaxAge ?? router.options.defaultLoaderMaxAge ?? 0,\n        )\n\n        if (gc > 0) {\n          store.matchCache[d.matchId] = {\n            gc: gc == Infinity ? Number.MAX_SAFE_INTEGER : now + gc,\n            match: d,\n          }\n        }\n      })\n\n      staying.forEach((d) => {\n        d.options.onTransition?.({\n          params: d.params,\n          search: d.store.routeSearch,\n        })\n      })\n\n      entering.forEach((d) => {\n        d.__.onExit = d.options.onLoaded?.({\n          params: d.params,\n          search: d.store.search,\n        })\n        delete store.matchCache[d.matchId]\n      })\n\n      if (startedLoadingAt !== startedAt) {\n        // Ignore side-effects of match loading\n        return\n      }\n\n      matches.forEach((match) => {\n        // Clear actions\n        if (match.action) {\n          // TODO: Check reactivity here\n          match.action.current = undefined\n          match.action.submissions = []\n        }\n      })\n\n      setStore((s) => {\n        console.log('set', matches)\n        Object.assign(s, {\n          status: 'idle',\n          currentLocation: store.latestLocation,\n          currentMatches: matches,\n          pendingLocation: undefined,\n          pendingMatches: undefined,\n        })\n      })\n\n      resolveNavigation()\n    },\n\n    cleanMatchCache: () => {\n      const now = Date.now()\n\n      setStore((s) => {\n        Object.keys(s.matchCache).forEach((matchId) => {\n          const entry = s.matchCache[matchId]!\n\n          // Don't remove loading matches\n          if (entry.match.store.status === 'loading') {\n            return\n          }\n\n          // Do not remove successful matches that are still valid\n          if (entry.gc > 0 && entry.gc > now) {\n            return\n          }\n\n          // Everything else gets removed\n          delete s.matchCache[matchId]\n        })\n      })\n    },\n\n    loadRoute: async (navigateOpts = store.latestLocation) => {\n      const next = router.buildNext(navigateOpts)\n      const matches = router.matchRoutes(next.pathname, {\n        strictParseParams: true,\n      })\n      await router.loadMatches(matches)\n      return matches\n    },\n\n    preloadRoute: async (navigateOpts = store.latestLocation, loaderOpts) => {\n      const next = router.buildNext(navigateOpts)\n      const matches = router.matchRoutes(next.pathname, {\n        strictParseParams: true,\n      })\n\n      await router.loadMatches(matches, {\n        preload: true,\n        maxAge:\n          loaderOpts.maxAge ??\n          router.options.defaultPreloadMaxAge ??\n          router.options.defaultLoaderMaxAge ??\n          0,\n        gcMaxAge:\n          loaderOpts.gcMaxAge ??\n          router.options.defaultPreloadGcMaxAge ??\n          router.options.defaultLoaderGcMaxAge ??\n          0,\n      })\n      return matches\n    },\n\n    matchRoutes: (pathname, opts) => {\n      router.cleanMatchCache()\n\n      const matches: RouteMatch[] = []\n\n      if (!router.routeTree) {\n        return matches\n      }\n\n      const existingMatches = [\n        ...store.currentMatches,\n        ...(store.pendingMatches ?? []),\n      ]\n\n      const recurse = async (routes: Route<any, any>[]): Promise<void> => {\n        const parentMatch = last(matches)\n        let params = parentMatch?.params ?? {}\n\n        const filteredRoutes = router.options.filterRoutes?.(routes) ?? routes\n\n        let foundRoutes: Route[] = []\n\n        const findMatchInRoutes = (parentRoutes: Route[], routes: Route[]) => {\n          routes.some((route) => {\n            if (!route.routePath && route.childRoutes?.length) {\n              return findMatchInRoutes(\n                [...foundRoutes, route],\n                route.childRoutes,\n              )\n            }\n\n            const fuzzy = !!(\n              route.routePath !== '/' || route.childRoutes?.length\n            )\n\n            const matchParams = matchPathname(router.basepath, pathname, {\n              to: route.fullPath,\n              fuzzy,\n              caseSensitive:\n                route.options.caseSensitive ?? router.options.caseSensitive,\n            })\n\n            if (matchParams) {\n              let parsedParams\n\n              try {\n                parsedParams =\n                  route.options.parseParams?.(matchParams!) ?? matchParams\n              } catch (err) {\n                if (opts?.strictParseParams) {\n                  throw err\n                }\n              }\n\n              params = {\n                ...params,\n                ...parsedParams,\n              }\n            }\n\n            if (!!matchParams) {\n              foundRoutes = [...parentRoutes, route]\n            }\n\n            return !!foundRoutes.length\n          })\n\n          return !!foundRoutes.length\n        }\n\n        findMatchInRoutes([], filteredRoutes)\n\n        if (!foundRoutes.length) {\n          return\n        }\n\n        foundRoutes.forEach((foundRoute) => {\n          const interpolatedPath = interpolatePath(foundRoute.routePath, params)\n          const matchId = interpolatePath(foundRoute.routeId, params, true)\n\n          const match =\n            existingMatches.find((d) => d.matchId === matchId) ||\n            store.matchCache[matchId]?.match ||\n            createRouteMatch(router, foundRoute, {\n              parentMatch,\n              matchId,\n              params,\n              pathname: joinPaths([router.basepath, interpolatedPath]),\n            })\n\n          matches.push(match)\n        })\n\n        const foundRoute = last(foundRoutes)!\n\n        if (foundRoute.childRoutes?.length) {\n          recurse(foundRoute.childRoutes)\n        }\n      }\n\n      recurse([router.routeTree])\n\n      linkMatches(matches)\n\n      return matches\n    },\n\n    loadMatches: async (resolvedMatches, loaderOpts) => {\n      resolvedMatches.forEach(async (match) => {\n        // Validate the match (loads search params etc)\n        match.__.validate()\n      })\n\n      // Check each match middleware to see if the route can be accessed\n      await Promise.all(\n        resolvedMatches.map(async (match) => {\n          try {\n            await match.options.beforeLoad?.({\n              router: router as any,\n              match,\n            })\n          } catch (err) {\n            if (!loaderOpts?.preload) {\n              match.options.onLoadError?.(err)\n            }\n\n            throw err\n          }\n        }),\n      )\n\n      const matchPromises = resolvedMatches.map(async (match) => {\n        const search = match.store.search as { __data?: any }\n\n        if (search.__data?.matchId && search.__data.matchId !== match.matchId) {\n          return\n        }\n\n        match.load(loaderOpts)\n\n        if (match.store.status !== 'success' && match.__.loadPromise) {\n          // Wait for the first sign of activity from the match\n          await match.__.loadPromise\n        }\n      })\n\n      await Promise.all(matchPromises)\n    },\n\n    loadMatchData: async (routeMatch) => {\n      if (isServer || !router.options.useServerData) {\n        return (\n          (await routeMatch.options.loader?.({\n            // parentLoaderPromise: routeMatch.parentMatch?.__.dataPromise,\n            params: routeMatch.params,\n            search: routeMatch.store.routeSearch,\n            signal: routeMatch.__.abortController.signal,\n          })) || {}\n        )\n      } else {\n        const next = router.buildNext({\n          to: '.',\n          search: (d: any) => ({\n            ...(d ?? {}),\n            __data: {\n              matchId: routeMatch.matchId,\n            },\n          }),\n        })\n\n        // Refresh:\n        // '/dashboard'\n        // '/dashboard/invoices/'\n        // '/dashboard/invoices/123'\n\n        // New:\n        // '/dashboard/invoices/456'\n\n        // TODO: batch requests when possible\n\n        const res = await fetch(next.href, {\n          method: 'GET',\n          // signal: routeMatch.__.abortController.signal,\n        })\n\n        if (res.ok) {\n          return res.json()\n        }\n\n        throw new Error('Failed to fetch match data')\n      }\n    },\n\n    invalidateRoute: (opts: MatchLocation) => {\n      const next = router.buildNext(opts)\n      const unloadedMatchIds = router\n        .matchRoutes(next.pathname)\n        .map((d) => d.matchId)\n      ;[...store.currentMatches, ...(store.pendingMatches ?? [])].forEach(\n        (match) => {\n          if (unloadedMatchIds.includes(match.matchId)) {\n            match.invalidate()\n          }\n        },\n      )\n    },\n\n    reload: () =>\n      navigate({\n        fromCurrent: true,\n        replace: true,\n        search: true,\n      }),\n\n    resolvePath: (from: string, path: string) => {\n      return resolvePath(router.basepath!, from, cleanPath(path))\n    },\n\n    matchRoute: (location, opts) => {\n      // const location = router.buildNext(opts)\n\n      location = {\n        ...location,\n        to: location.to\n          ? router.resolvePath(location.from ?? '', location.to)\n          : undefined,\n      }\n\n      const next = router.buildNext(location)\n\n      if (opts?.pending) {\n        if (!store.pendingLocation) {\n          return false\n        }\n\n        return !!matchPathname(\n          router.basepath,\n          store.pendingLocation.pathname,\n          {\n            ...opts,\n            to: next.pathname,\n          },\n        )\n      }\n\n      return matchPathname(router.basepath, store.currentLocation.pathname, {\n        ...opts,\n        to: next.pathname,\n      }) as any\n    },\n\n    navigate: async ({ from, to = '.', search, hash, replace, params }) => {\n      // If this link simply reloads the current route,\n      // make sure it has a new key so it will trigger a data refresh\n\n      // If this `to` is a valid external URL, return\n      // null for LinkUtils\n      const toString = String(to)\n      const fromString = String(from)\n\n      let isExternal\n\n      try {\n        new URL(`${toString}`)\n        isExternal = true\n      } catch (e) {}\n\n      invariant(\n        !isExternal,\n        'Attempting to navigate to external url with router.navigate!',\n      )\n\n      return navigate({\n        from: fromString,\n        to: toString,\n        search,\n        hash,\n        replace,\n        params,\n      })\n    },\n\n    buildLink: ({\n      from,\n      to = '.',\n      search,\n      params,\n      hash,\n      target,\n      replace,\n      activeOptions,\n      preload,\n      preloadMaxAge: userPreloadMaxAge,\n      preloadGcMaxAge: userPreloadGcMaxAge,\n      preloadDelay: userPreloadDelay,\n      disabled,\n    }) => {\n      // If this link simply reloads the current route,\n      // make sure it has a new key so it will trigger a data refresh\n\n      // If this `to` is a valid external URL, return\n      // null for LinkUtils\n\n      try {\n        new URL(`${to}`)\n        return {\n          type: 'external',\n          href: to,\n        }\n      } catch (e) {}\n\n      const nextOpts = {\n        from,\n        to,\n        search,\n        params,\n        hash,\n        replace,\n      }\n\n      const next = router.buildNext(nextOpts)\n\n      preload = preload ?? router.options.defaultPreload\n      const preloadDelay =\n        userPreloadDelay ?? router.options.defaultPreloadDelay ?? 0\n\n      // Compare path/hash for matches\n      const pathIsEqual = store.currentLocation.pathname === next.pathname\n      const currentPathSplit = store.currentLocation.pathname.split('/')\n      const nextPathSplit = next.pathname.split('/')\n      const pathIsFuzzyEqual = nextPathSplit.every(\n        (d, i) => d === currentPathSplit[i],\n      )\n      const hashIsEqual = store.currentLocation.hash === next.hash\n      // Combine the matches based on user options\n      const pathTest = activeOptions?.exact ? pathIsEqual : pathIsFuzzyEqual\n      const hashTest = activeOptions?.includeHash ? hashIsEqual : true\n\n      // The final \"active\" test\n      const isActive = pathTest && hashTest\n\n      // The click handler\n      const handleClick = (e: MouseEvent) => {\n        if (\n          !disabled &&\n          !isCtrlEvent(e) &&\n          !e.defaultPrevented &&\n          (!target || target === '_self') &&\n          e.button === 0\n        ) {\n          e.preventDefault()\n          if (pathIsEqual && !search && !hash) {\n            router.invalidateRoute(nextOpts)\n          }\n\n          // All is well? Navigate!\n          navigate(nextOpts)\n        }\n      }\n\n      // The click handler\n      const handleFocus = (e: MouseEvent) => {\n        if (preload) {\n          router\n            .preloadRoute(nextOpts, {\n              maxAge: userPreloadMaxAge,\n              gcMaxAge: userPreloadGcMaxAge,\n            })\n            .catch((err) => {\n              console.log(err)\n              console.warn('Error preloading route! ☝️')\n            })\n        }\n      }\n\n      const handleEnter = (e: MouseEvent) => {\n        const target = (e.target || {}) as LinkCurrentTargetElement\n\n        if (preload) {\n          if (target.preloadTimeout) {\n            return\n          }\n\n          target.preloadTimeout = setTimeout(() => {\n            target.preloadTimeout = null\n            router\n              .preloadRoute(nextOpts, {\n                maxAge: userPreloadMaxAge,\n                gcMaxAge: userPreloadGcMaxAge,\n              })\n              .catch((err) => {\n                console.log(err)\n                console.warn('Error preloading route! ☝️')\n              })\n          }, preloadDelay)\n        }\n      }\n\n      const handleLeave = (e: MouseEvent) => {\n        const target = (e.target || {}) as LinkCurrentTargetElement\n\n        if (target.preloadTimeout) {\n          clearTimeout(target.preloadTimeout)\n          target.preloadTimeout = null\n        }\n      }\n\n      return {\n        type: 'internal',\n        next,\n        handleFocus,\n        handleClick,\n        handleEnter,\n        handleLeave,\n        isActive,\n        disabled,\n      }\n    },\n    buildNext: (opts: BuildNextOptions) => {\n      const next = buildLocation(opts)\n\n      const matches = router.matchRoutes(next.pathname)\n\n      const __preSearchFilters = matches\n        .map((match) => match.options.preSearchFilters ?? [])\n        .flat()\n        .filter(Boolean)\n\n      const __postSearchFilters = matches\n        .map((match) => match.options.postSearchFilters ?? [])\n        .flat()\n        .filter(Boolean)\n\n      return buildLocation({\n        ...opts,\n        __preSearchFilters,\n        __postSearchFilters,\n      })\n    },\n  }\n\n  router.update(userOptions)\n\n  // Allow frameworks to hook into the router creation\n  router.options.createRouter?.(router)\n\n  return router\n}\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nfunction linkMatches(matches: RouteMatch<any, any>[]) {\n  matches.forEach((match, index) => {\n    const parent = matches[index - 1]\n\n    if (parent) {\n      match.__.setParentMatch(parent)\n    } else {\n      match.__.setParentMatch(undefined)\n    }\n  })\n}\n"],"names":["last","arr","length","warning","cond","message","console","warn","Error","isFunction","d","functionalUpdate","updater","previous","pick","parent","keys","reduce","obj","key","joinPaths","paths","cleanPath","filter","Boolean","join","path","replace","trimPathLeft","trimPathRight","trimPath","resolvePath","basepath","base","to","RegExp","baseSegments","parsePathname","toSegments","forEach","toSegment","index","value","push","pop","joined","map","pathname","segments","slice","substring","type","split","part","startsWith","charAt","interpolatePath","params","leaveWildcard","interpolatedPathSegments","segment","matchPathname","currentPathname","matchLocation","pathParams","matchByPath","from","undefined","routeSegments","isMatch","i","Math","max","baseSegment","routeSegment","isLastRouteSegment","isLastBaseSegment","caseSensitive","toLowerCase","fuzzy","encode","pfx","k","tmp","str","Array","isArray","encodeURIComponent","toValue","mix","decodeURIComponent","decode","out","shift","concat","createRoute","routeConfig","options","originalIndex","router","id","routeId","routePath","fullPath","route","routeInfo","routeRouteId","childRoutes","parentRoute","action","store","actions","setStore","s","submissions","submit","submission","actionOpts","invalidate","actionStore","setActionStore","createStore","submittedAt","Date","now","status","isMulti","multi","current","latest","res","data","invalidateRoute","fromCurrent","reload","err","error","loader","loaders","pending","fetch","loaderContext","loaderState","loadedAt","rootRouteId","createRouteConfig","children","isRoot","parentId","parentPath","addChildren","childOptions","generate","invariant","sharedClone","prev","next","touchAll","things","Map","recurse","has","get","prevIsArray","nextIsArray","prevIsObj","isPlainObject","nextIsObj","isObj","isSameStructure","aSize","Object","bItems","bSize","copy","equalItems","set","nextKeys","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","toString","call","componentTypes","createRouteMatch","opts","componentsPromise","dataPromise","latestId","resolve","setLoaderData","loaderData","batch","routeLoaderData","updateLoaderData","parentMatch","routeSearch","search","isFetching","invalid","invalidAt","Infinity","isInvalid","routeMatch","childMatches","__","setParentMatch","abortController","AbortController","validate","parentSearch","currentLocation","prevSearch","validator","validateSearch","parse","nextSearch","component","cause","code","cancel","abort","hasLoaders","some","preload","load","loaderOpts","minMaxAge","maxAge","gcMaxAge","currentMatches","find","matchId","matchCache","gc","match","loadId","random","checkLatest","Promise","loadPromise","r","all","loadComponent","then","loadMatchData","updatedAt","loaderMaxAge","defaultLoaderMaxAge","process","env","NODE_ENV","after","catch","defaultParseSearch","parseSearchWith","JSON","defaultStringifySearch","stringifySearchWith","stringify","parser","searchStr","query","val","isServer","window","document","createElement","createDefaultHistory","createMemoryHistory","createBrowserHistory","getInitialRouterState","latestLocation","lastUpdated","isPreloading","values","dd","createRouter","userOptions","originalOptions","defaultLoaderGcMaxAge","defaultPreloadMaxAge","defaultPreloadDelay","context","stringifySearch","parseSearch","navigationPromise","startedLoadingAt","resolveNavigation","onFocus","buildRouteTree","rootRouteConfig","recurseRoutes","routeConfigs","routeOptions","existingRoute","routesById","String","routes","parseLocation","location","previousLocation","parsedSearch","hash","reverse","href","state","navigate","buildNext","commitLocation","buildLocation","dest","fromPathname","fromMatches","matchRoutes","strictParseParams","toMatches","prevParams","nextParams","stringifyParams","fn","assign","preFilteredSearch","__preSearchFilters","destSearch","postFilteredSearch","__postSearchFilters","nextAction","isSameUrl","history","previousNavigationResolve","types","routeTree","reset","getRoute","dehydrate","hydrate","dehydratedRouter","dehydratedMatch","mount","unsub","listen","event","addEventListener","removeEventListener","update","newHistory","cancelMatches","pendingMatches","startedAt","matches","log","pendingLocation","loadMatches","previousMatches","exiting","staying","entering","onExit","loaderGcMaxAge","Number","MAX_SAFE_INTEGER","onTransition","onLoaded","cleanMatchCache","entry","loadRoute","navigateOpts","preloadRoute","defaultPreloadGcMaxAge","existingMatches","filteredRoutes","filterRoutes","foundRoutes","findMatchInRoutes","parentRoutes","matchParams","parsedParams","parseParams","foundRoute","interpolatedPath","linkMatches","resolvedMatches","beforeLoad","onLoadError","matchPromises","__data","useServerData","signal","method","ok","json","unloadedMatchIds","includes","matchRoute","fromString","isExternal","URL","e","buildLink","target","activeOptions","preloadMaxAge","userPreloadMaxAge","preloadGcMaxAge","userPreloadGcMaxAge","preloadDelay","userPreloadDelay","disabled","nextOpts","defaultPreload","pathIsEqual","currentPathSplit","nextPathSplit","pathIsFuzzyEqual","every","hashIsEqual","pathTest","exact","hashTest","includeHash","isActive","handleClick","isCtrlEvent","defaultPrevented","button","preventDefault","handleFocus","handleEnter","preloadTimeout","setTimeout","handleLeave","clearTimeout","preSearchFilters","flat","postSearchFilters","metaKey","altKey","ctrlKey","shiftKey"],"mappings":"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"}